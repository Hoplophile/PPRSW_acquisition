
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000173a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00802000  0000173a  000017ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00802012  00802012  000017e0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017e0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000044  00000000  00000000  0000183c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007273  00000000  00000000  00001988  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003af7  00000000  00000000  00008bfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002535  00000000  00000000  0000c6f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000298  00000000  00000000  0000ec28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0002d966  00000000  00000000  0000eec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012de  00000000  00000000  0003c826  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0003db04  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00009d94  00000000  00000000  0003dbf4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	03 c1       	rjmp	.+518    	; 0x208 <__ctors_end>
       2:	00 00       	nop
       4:	21 c1       	rjmp	.+578    	; 0x248 <__bad_interrupt>
       6:	00 00       	nop
       8:	1f c1       	rjmp	.+574    	; 0x248 <__bad_interrupt>
       a:	00 00       	nop
       c:	1d c1       	rjmp	.+570    	; 0x248 <__bad_interrupt>
       e:	00 00       	nop
      10:	1b c1       	rjmp	.+566    	; 0x248 <__bad_interrupt>
      12:	00 00       	nop
      14:	19 c1       	rjmp	.+562    	; 0x248 <__bad_interrupt>
      16:	00 00       	nop
      18:	17 c1       	rjmp	.+558    	; 0x248 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	15 c1       	rjmp	.+554    	; 0x248 <__bad_interrupt>
      1e:	00 00       	nop
      20:	13 c1       	rjmp	.+550    	; 0x248 <__bad_interrupt>
      22:	00 00       	nop
      24:	11 c1       	rjmp	.+546    	; 0x248 <__bad_interrupt>
      26:	00 00       	nop
      28:	0f c1       	rjmp	.+542    	; 0x248 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0d c1       	rjmp	.+538    	; 0x248 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0b c1       	rjmp	.+534    	; 0x248 <__bad_interrupt>
      32:	00 00       	nop
      34:	09 c1       	rjmp	.+530    	; 0x248 <__bad_interrupt>
      36:	00 00       	nop
      38:	07 c1       	rjmp	.+526    	; 0x248 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	05 c1       	rjmp	.+522    	; 0x248 <__bad_interrupt>
      3e:	00 00       	nop
      40:	03 c1       	rjmp	.+518    	; 0x248 <__bad_interrupt>
      42:	00 00       	nop
      44:	01 c1       	rjmp	.+514    	; 0x248 <__bad_interrupt>
      46:	00 00       	nop
      48:	ff c0       	rjmp	.+510    	; 0x248 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fd c0       	rjmp	.+506    	; 0x248 <__bad_interrupt>
      4e:	00 00       	nop
      50:	fb c0       	rjmp	.+502    	; 0x248 <__bad_interrupt>
      52:	00 00       	nop
      54:	f9 c0       	rjmp	.+498    	; 0x248 <__bad_interrupt>
      56:	00 00       	nop
      58:	f7 c0       	rjmp	.+494    	; 0x248 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f5 c0       	rjmp	.+490    	; 0x248 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f3 c0       	rjmp	.+486    	; 0x248 <__bad_interrupt>
      62:	00 00       	nop
      64:	f1 c0       	rjmp	.+482    	; 0x248 <__bad_interrupt>
      66:	00 00       	nop
      68:	ef c0       	rjmp	.+478    	; 0x248 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ed c0       	rjmp	.+474    	; 0x248 <__bad_interrupt>
      6e:	00 00       	nop
      70:	eb c0       	rjmp	.+470    	; 0x248 <__bad_interrupt>
      72:	00 00       	nop
      74:	e9 c0       	rjmp	.+466    	; 0x248 <__bad_interrupt>
      76:	00 00       	nop
      78:	e7 c0       	rjmp	.+462    	; 0x248 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e5 c0       	rjmp	.+458    	; 0x248 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e3 c0       	rjmp	.+454    	; 0x248 <__bad_interrupt>
      82:	00 00       	nop
      84:	e1 c0       	rjmp	.+450    	; 0x248 <__bad_interrupt>
      86:	00 00       	nop
      88:	df c0       	rjmp	.+446    	; 0x248 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	dd c0       	rjmp	.+442    	; 0x248 <__bad_interrupt>
      8e:	00 00       	nop
      90:	db c0       	rjmp	.+438    	; 0x248 <__bad_interrupt>
      92:	00 00       	nop
      94:	d9 c0       	rjmp	.+434    	; 0x248 <__bad_interrupt>
      96:	00 00       	nop
      98:	d7 c0       	rjmp	.+430    	; 0x248 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d5 c0       	rjmp	.+426    	; 0x248 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d3 c0       	rjmp	.+422    	; 0x248 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d1 c0       	rjmp	.+418    	; 0x248 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cf c0       	rjmp	.+414    	; 0x248 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	cd c0       	rjmp	.+410    	; 0x248 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	cb c0       	rjmp	.+406    	; 0x248 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c9 c0       	rjmp	.+402    	; 0x248 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c7 c0       	rjmp	.+398    	; 0x248 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	c5 c0       	rjmp	.+394    	; 0x248 <__bad_interrupt>
      be:	00 00       	nop
      c0:	c3 c0       	rjmp	.+390    	; 0x248 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c1 c0       	rjmp	.+386    	; 0x248 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	bf c0       	rjmp	.+382    	; 0x248 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	bd c0       	rjmp	.+378    	; 0x248 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	bb c0       	rjmp	.+374    	; 0x248 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	b9 c0       	rjmp	.+370    	; 0x248 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b7 c0       	rjmp	.+366    	; 0x248 <__bad_interrupt>
      da:	00 00       	nop
      dc:	b5 c0       	rjmp	.+362    	; 0x248 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b3 c0       	rjmp	.+358    	; 0x248 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	b1 c0       	rjmp	.+354    	; 0x248 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	af c0       	rjmp	.+350    	; 0x248 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	ad c0       	rjmp	.+346    	; 0x248 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	ab c0       	rjmp	.+342    	; 0x248 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a9 c0       	rjmp	.+338    	; 0x248 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a7 c0       	rjmp	.+334    	; 0x248 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a5 c0       	rjmp	.+330    	; 0x248 <__bad_interrupt>
      fe:	00 00       	nop
     100:	a3 c0       	rjmp	.+326    	; 0x248 <__bad_interrupt>
     102:	00 00       	nop
     104:	a1 c0       	rjmp	.+322    	; 0x248 <__bad_interrupt>
     106:	00 00       	nop
     108:	9f c0       	rjmp	.+318    	; 0x248 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	9d c0       	rjmp	.+314    	; 0x248 <__bad_interrupt>
     10e:	00 00       	nop
     110:	9b c0       	rjmp	.+310    	; 0x248 <__bad_interrupt>
     112:	00 00       	nop
     114:	99 c0       	rjmp	.+306    	; 0x248 <__bad_interrupt>
     116:	00 00       	nop
     118:	97 c0       	rjmp	.+302    	; 0x248 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	95 c0       	rjmp	.+298    	; 0x248 <__bad_interrupt>
     11e:	00 00       	nop
     120:	93 c0       	rjmp	.+294    	; 0x248 <__bad_interrupt>
     122:	00 00       	nop
     124:	91 c0       	rjmp	.+290    	; 0x248 <__bad_interrupt>
     126:	00 00       	nop
     128:	8f c0       	rjmp	.+286    	; 0x248 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	8d c0       	rjmp	.+282    	; 0x248 <__bad_interrupt>
     12e:	00 00       	nop
     130:	8b c0       	rjmp	.+278    	; 0x248 <__bad_interrupt>
     132:	00 00       	nop
     134:	89 c0       	rjmp	.+274    	; 0x248 <__bad_interrupt>
     136:	00 00       	nop
     138:	87 c0       	rjmp	.+270    	; 0x248 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	85 c0       	rjmp	.+266    	; 0x248 <__bad_interrupt>
     13e:	00 00       	nop
     140:	83 c0       	rjmp	.+262    	; 0x248 <__bad_interrupt>
     142:	00 00       	nop
     144:	81 c0       	rjmp	.+258    	; 0x248 <__bad_interrupt>
     146:	00 00       	nop
     148:	7f c0       	rjmp	.+254    	; 0x248 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	7d c0       	rjmp	.+250    	; 0x248 <__bad_interrupt>
     14e:	00 00       	nop
     150:	7b c0       	rjmp	.+246    	; 0x248 <__bad_interrupt>
     152:	00 00       	nop
     154:	79 c0       	rjmp	.+242    	; 0x248 <__bad_interrupt>
     156:	00 00       	nop
     158:	77 c0       	rjmp	.+238    	; 0x248 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	75 c0       	rjmp	.+234    	; 0x248 <__bad_interrupt>
     15e:	00 00       	nop
     160:	73 c0       	rjmp	.+230    	; 0x248 <__bad_interrupt>
     162:	00 00       	nop
     164:	71 c0       	rjmp	.+226    	; 0x248 <__bad_interrupt>
     166:	00 00       	nop
     168:	6f c0       	rjmp	.+222    	; 0x248 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	6d c0       	rjmp	.+218    	; 0x248 <__bad_interrupt>
     16e:	00 00       	nop
     170:	6b c0       	rjmp	.+214    	; 0x248 <__bad_interrupt>
     172:	00 00       	nop
     174:	69 c0       	rjmp	.+210    	; 0x248 <__bad_interrupt>
     176:	00 00       	nop
     178:	67 c0       	rjmp	.+206    	; 0x248 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	65 c0       	rjmp	.+202    	; 0x248 <__bad_interrupt>
     17e:	00 00       	nop
     180:	63 c0       	rjmp	.+198    	; 0x248 <__bad_interrupt>
     182:	00 00       	nop
     184:	61 c0       	rjmp	.+194    	; 0x248 <__bad_interrupt>
     186:	00 00       	nop
     188:	5f c0       	rjmp	.+190    	; 0x248 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	5d c0       	rjmp	.+186    	; 0x248 <__bad_interrupt>
     18e:	00 00       	nop
     190:	5b c0       	rjmp	.+182    	; 0x248 <__bad_interrupt>
     192:	00 00       	nop
     194:	59 c0       	rjmp	.+178    	; 0x248 <__bad_interrupt>
     196:	00 00       	nop
     198:	57 c0       	rjmp	.+174    	; 0x248 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	55 c0       	rjmp	.+170    	; 0x248 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	53 c0       	rjmp	.+166    	; 0x248 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	51 c0       	rjmp	.+162    	; 0x248 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	4f c0       	rjmp	.+158    	; 0x248 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	4d c0       	rjmp	.+154    	; 0x248 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	4b c0       	rjmp	.+150    	; 0x248 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	49 c0       	rjmp	.+146    	; 0x248 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	47 c0       	rjmp	.+142    	; 0x248 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	45 c0       	rjmp	.+138    	; 0x248 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	43 c0       	rjmp	.+134    	; 0x248 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	41 c0       	rjmp	.+130    	; 0x248 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	3f c0       	rjmp	.+126    	; 0x248 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	3d c0       	rjmp	.+122    	; 0x248 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	3b c0       	rjmp	.+118    	; 0x248 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	39 c0       	rjmp	.+114    	; 0x248 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	37 c0       	rjmp	.+110    	; 0x248 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	35 c0       	rjmp	.+106    	; 0x248 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	33 c0       	rjmp	.+102    	; 0x248 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	31 c0       	rjmp	.+98     	; 0x248 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	2f c0       	rjmp	.+94     	; 0x248 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	2d c0       	rjmp	.+90     	; 0x248 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	2b c0       	rjmp	.+86     	; 0x248 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	29 c0       	rjmp	.+82     	; 0x248 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	27 c0       	rjmp	.+78     	; 0x248 <__bad_interrupt>
	...

000001fc <__trampolines_end>:
     1fc:	63 64       	ori	r22, 0x43	; 67
     1fe:	69 6e       	ori	r22, 0xE9	; 233
     200:	6f 70       	andi	r22, 0x0F	; 15
     202:	73 75       	andi	r23, 0x53	; 83
     204:	78 58       	subi	r23, 0x88	; 136
     206:	5b 00       	.word	0x005b	; ????

00000208 <__ctors_end>:
     208:	11 24       	eor	r1, r1
     20a:	1f be       	out	0x3f, r1	; 63
     20c:	cf ef       	ldi	r28, 0xFF	; 255
     20e:	cd bf       	out	0x3d, r28	; 61
     210:	df e5       	ldi	r29, 0x5F	; 95
     212:	de bf       	out	0x3e, r29	; 62
     214:	00 e0       	ldi	r16, 0x00	; 0
     216:	0c bf       	out	0x3c, r16	; 60

00000218 <__do_copy_data>:
     218:	10 e2       	ldi	r17, 0x20	; 32
     21a:	a0 e0       	ldi	r26, 0x00	; 0
     21c:	b0 e2       	ldi	r27, 0x20	; 32
     21e:	ea e3       	ldi	r30, 0x3A	; 58
     220:	f7 e1       	ldi	r31, 0x17	; 23
     222:	00 e0       	ldi	r16, 0x00	; 0
     224:	0b bf       	out	0x3b, r16	; 59
     226:	02 c0       	rjmp	.+4      	; 0x22c <__do_copy_data+0x14>
     228:	07 90       	elpm	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	a2 31       	cpi	r26, 0x12	; 18
     22e:	b1 07       	cpc	r27, r17
     230:	d9 f7       	brne	.-10     	; 0x228 <__do_copy_data+0x10>

00000232 <__do_clear_bss>:
     232:	20 e2       	ldi	r18, 0x20	; 32
     234:	a2 e1       	ldi	r26, 0x12	; 18
     236:	b0 e2       	ldi	r27, 0x20	; 32
     238:	01 c0       	rjmp	.+2      	; 0x23c <.do_clear_bss_start>

0000023a <.do_clear_bss_loop>:
     23a:	1d 92       	st	X+, r1

0000023c <.do_clear_bss_start>:
     23c:	a2 32       	cpi	r26, 0x22	; 34
     23e:	b2 07       	cpc	r27, r18
     240:	e1 f7       	brne	.-8      	; 0x23a <.do_clear_bss_loop>
     242:	7c d2       	rcall	.+1272   	; 0x73c <main>
     244:	0c 94 9b 0b 	jmp	0x1736	; 0x1736 <_exit>

00000248 <__bad_interrupt>:
     248:	db ce       	rjmp	.-586    	; 0x0 <__vectors>

0000024a <_read>:
#elif (defined(__GNUC__) && (XMEGA || MEGA) )

int _read (int *f); // Remove GCC compiler warning

int _read (int *f)
{
     24a:	cf 93       	push	r28
     24c:	df 93       	push	r29
     24e:	1f 92       	push	r1
     250:	cd b7       	in	r28, 0x3d	; 61
     252:	de b7       	in	r29, 0x3e	; 62
	char c;
	ptr_get(stdio_base,&c);
     254:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <stdio_base>
     258:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <stdio_base+0x1>
     25c:	e0 91 12 20 	lds	r30, 0x2012	; 0x802012 <__data_end>
     260:	f0 91 13 20 	lds	r31, 0x2013	; 0x802013 <__data_end+0x1>
     264:	be 01       	movw	r22, r28
     266:	6f 5f       	subi	r22, 0xFF	; 255
     268:	7f 4f       	sbci	r23, 0xFF	; 255
     26a:	19 95       	eicall
	return c;
     26c:	89 81       	ldd	r24, Y+1	; 0x01
}
     26e:	08 2e       	mov	r0, r24
     270:	00 0c       	add	r0, r0
     272:	99 0b       	sbc	r25, r25
     274:	0f 90       	pop	r0
     276:	df 91       	pop	r29
     278:	cf 91       	pop	r28
     27a:	08 95       	ret

0000027c <usart_putchar>:

	if (baud_offset != USART_BAUD_UNDEFINED) {
		(usart)->BAUDCTRLB = (uint8_t)((uint16_t)baudctrl);
		(usart)->BAUDCTRLA = (uint8_t)((uint16_t)baudctrl >> 8);
	}
}
     27c:	fc 01       	movw	r30, r24
     27e:	91 81       	ldd	r25, Z+1	; 0x01
     280:	95 ff       	sbrs	r25, 5
     282:	fd cf       	rjmp	.-6      	; 0x27e <usart_putchar+0x2>
     284:	60 83       	st	Z, r22
     286:	80 e0       	ldi	r24, 0x00	; 0
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	08 95       	ret

0000028c <usart_getchar>:
     28c:	fc 01       	movw	r30, r24
     28e:	91 81       	ldd	r25, Z+1	; 0x01
     290:	99 23       	and	r25, r25
     292:	ec f7       	brge	.-6      	; 0x28e <usart_getchar+0x2>
     294:	80 81       	ld	r24, Z
     296:	08 95       	ret

00000298 <usart_set_baudrate>:
 * \retval true if the hardware supports the baud rate
 * \retval false if the hardware does not support the baud rate (i.e. it's
 *               either too high or too low.)
 */
bool usart_set_baudrate(USART_t *usart, uint32_t baud, uint32_t cpu_hz)
{
     298:	4f 92       	push	r4
     29a:	5f 92       	push	r5
     29c:	6f 92       	push	r6
     29e:	7f 92       	push	r7
     2a0:	8f 92       	push	r8
     2a2:	9f 92       	push	r9
     2a4:	af 92       	push	r10
     2a6:	bf 92       	push	r11
     2a8:	ef 92       	push	r14
     2aa:	ff 92       	push	r15
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	7c 01       	movw	r14, r24
     2b4:	4a 01       	movw	r8, r20
     2b6:	5b 01       	movw	r10, r22
     2b8:	28 01       	movw	r4, r16
     2ba:	39 01       	movw	r6, r18
	/* 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN) */
	max_rate = cpu_hz / 8;
	/* 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1) */
	min_rate = cpu_hz / 4194304;

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
     2bc:	fc 01       	movw	r30, r24
     2be:	84 81       	ldd	r24, Z+4	; 0x04
     2c0:	82 ff       	sbrs	r24, 2
     2c2:	16 c0       	rjmp	.+44     	; 0x2f0 <usart_set_baudrate+0x58>

	/*
	 * Check if the hardware supports the given baud rate
	 */
	/* 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN) */
	max_rate = cpu_hz / 8;
     2c4:	d9 01       	movw	r26, r18
     2c6:	c8 01       	movw	r24, r16
     2c8:	68 94       	set
     2ca:	12 f8       	bld	r1, 2
     2cc:	b6 95       	lsr	r27
     2ce:	a7 95       	ror	r26
     2d0:	97 95       	ror	r25
     2d2:	87 95       	ror	r24
     2d4:	16 94       	lsr	r1
     2d6:	d1 f7       	brne	.-12     	; 0x2cc <usart_set_baudrate+0x34>
	/* 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1) */
	min_rate = cpu_hz / 4194304;
     2d8:	b9 01       	movw	r22, r18
     2da:	a8 01       	movw	r20, r16
     2dc:	03 2e       	mov	r0, r19
     2de:	36 e1       	ldi	r19, 0x16	; 22
     2e0:	76 95       	lsr	r23
     2e2:	67 95       	ror	r22
     2e4:	57 95       	ror	r21
     2e6:	47 95       	ror	r20
     2e8:	3a 95       	dec	r19
     2ea:	d1 f7       	brne	.-12     	; 0x2e0 <usart_set_baudrate+0x48>
     2ec:	30 2d       	mov	r19, r0
     2ee:	15 c0       	rjmp	.+42     	; 0x31a <usart_set_baudrate+0x82>

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
		max_rate /= 2;
     2f0:	d9 01       	movw	r26, r18
     2f2:	c8 01       	movw	r24, r16
     2f4:	68 94       	set
     2f6:	13 f8       	bld	r1, 3
     2f8:	b6 95       	lsr	r27
     2fa:	a7 95       	ror	r26
     2fc:	97 95       	ror	r25
     2fe:	87 95       	ror	r24
     300:	16 94       	lsr	r1
     302:	d1 f7       	brne	.-12     	; 0x2f8 <usart_set_baudrate+0x60>
		min_rate /= 2;
     304:	b9 01       	movw	r22, r18
     306:	a8 01       	movw	r20, r16
     308:	03 2e       	mov	r0, r19
     30a:	37 e1       	ldi	r19, 0x17	; 23
     30c:	76 95       	lsr	r23
     30e:	67 95       	ror	r22
     310:	57 95       	ror	r21
     312:	47 95       	ror	r20
     314:	3a 95       	dec	r19
     316:	d1 f7       	brne	.-12     	; 0x30c <usart_set_baudrate+0x74>
     318:	30 2d       	mov	r19, r0
	}

	if ((baud > max_rate) || (baud < min_rate)) {
     31a:	88 15       	cp	r24, r8
     31c:	99 05       	cpc	r25, r9
     31e:	aa 05       	cpc	r26, r10
     320:	bb 05       	cpc	r27, r11
     322:	08 f4       	brcc	.+2      	; 0x326 <usart_set_baudrate+0x8e>
     324:	a2 c0       	rjmp	.+324    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     326:	84 16       	cp	r8, r20
     328:	95 06       	cpc	r9, r21
     32a:	a6 06       	cpc	r10, r22
     32c:	b7 06       	cpc	r11, r23
     32e:	08 f4       	brcc	.+2      	; 0x332 <usart_set_baudrate+0x9a>
     330:	9e c0       	rjmp	.+316    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
		return false;
	}

	/* Check if double speed is enabled. */
	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
     332:	f7 01       	movw	r30, r14
     334:	84 81       	ldd	r24, Z+4	; 0x04
     336:	82 fd       	sbrc	r24, 2
     338:	04 c0       	rjmp	.+8      	; 0x342 <usart_set_baudrate+0xaa>
		baud *= 2;
     33a:	88 0c       	add	r8, r8
     33c:	99 1c       	adc	r9, r9
     33e:	aa 1c       	adc	r10, r10
     340:	bb 1c       	adc	r11, r11
	}

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;
     342:	c3 01       	movw	r24, r6
     344:	b2 01       	movw	r22, r4
     346:	a5 01       	movw	r20, r10
     348:	94 01       	movw	r18, r8
     34a:	4a d2       	rcall	.+1172   	; 0x7e0 <__udivmodsi4>

	for (exp = -7; exp < 7; exp++) {
		if (ratio < limit) {
     34c:	2f 3f       	cpi	r18, 0xFF	; 255
     34e:	31 05       	cpc	r19, r1
     350:	41 05       	cpc	r20, r1
     352:	51 05       	cpc	r21, r1
     354:	08 f4       	brcc	.+2      	; 0x358 <usart_set_baudrate+0xc0>
     356:	8d c0       	rjmp	.+282    	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     358:	8f ef       	ldi	r24, 0xFF	; 255
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	a0 e0       	ldi	r26, 0x00	; 0
     35e:	b0 e0       	ldi	r27, 0x00	; 0
     360:	c9 ef       	ldi	r28, 0xF9	; 249
     362:	05 c0       	rjmp	.+10     	; 0x36e <usart_set_baudrate+0xd6>
     364:	28 17       	cp	r18, r24
     366:	39 07       	cpc	r19, r25
     368:	4a 07       	cpc	r20, r26
     36a:	5b 07       	cpc	r21, r27
     36c:	58 f0       	brcs	.+22     	; 0x384 <usart_set_baudrate+0xec>
			break;
		}

		limit <<= 1;
     36e:	88 0f       	add	r24, r24
     370:	99 1f       	adc	r25, r25
     372:	aa 1f       	adc	r26, r26
     374:	bb 1f       	adc	r27, r27

		if (exp < -3) {
     376:	cd 3f       	cpi	r28, 0xFD	; 253
     378:	0c f4       	brge	.+2      	; 0x37c <usart_set_baudrate+0xe4>
			limit |= 1;
     37a:	81 60       	ori	r24, 0x01	; 1
     37c:	cf 5f       	subi	r28, 0xFF	; 255

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
     37e:	c7 30       	cpi	r28, 0x07	; 7
     380:	89 f7       	brne	.-30     	; 0x364 <usart_set_baudrate+0xcc>
     382:	4d c0       	rjmp	.+154    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
	 * point.
	 *
	 * The formula for calculating BSEL is slightly different when exp is
	 * negative than it is when exp is positive.
	 */
	if (exp < 0) {
     384:	cc 23       	and	r28, r28
     386:	0c f0       	brlt	.+2      	; 0x38a <usart_set_baudrate+0xf2>
     388:	4a c0       	rjmp	.+148    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		/* We are supposed to subtract 1, then apply BSCALE. We want to
		 * apply BSCALE first, so we need to turn everything inside the
		 * parenthesis into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
     38a:	d5 01       	movw	r26, r10
     38c:	c4 01       	movw	r24, r8
     38e:	88 0f       	add	r24, r24
     390:	99 1f       	adc	r25, r25
     392:	aa 1f       	adc	r26, r26
     394:	bb 1f       	adc	r27, r27
     396:	88 0f       	add	r24, r24
     398:	99 1f       	adc	r25, r25
     39a:	aa 1f       	adc	r26, r26
     39c:	bb 1f       	adc	r27, r27
     39e:	88 0f       	add	r24, r24
     3a0:	99 1f       	adc	r25, r25
     3a2:	aa 1f       	adc	r26, r26
     3a4:	bb 1f       	adc	r27, r27
     3a6:	48 1a       	sub	r4, r24
     3a8:	59 0a       	sbc	r5, r25
     3aa:	6a 0a       	sbc	r6, r26
     3ac:	7b 0a       	sbc	r7, r27
		/* If we end up with a left-shift after taking the final
		 * divide-by-8 into account, do the shift before the divide.
		 * Otherwise, left-shift the denominator instead (effectively
		 * resulting in an overall right shift.)
		 */
		if (exp <= -3) {
     3ae:	ce 3f       	cpi	r28, 0xFE	; 254
     3b0:	ec f4       	brge	.+58     	; 0x3ec <usart_set_baudrate+0x154>
			div = ((cpu_hz << (-exp - 3)) + baud / 2) / baud;
     3b2:	8d ef       	ldi	r24, 0xFD	; 253
     3b4:	9f ef       	ldi	r25, 0xFF	; 255
     3b6:	8c 1b       	sub	r24, r28
     3b8:	91 09       	sbc	r25, r1
     3ba:	c7 fd       	sbrc	r28, 7
     3bc:	93 95       	inc	r25
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <usart_set_baudrate+0x130>
     3c0:	44 0c       	add	r4, r4
     3c2:	55 1c       	adc	r5, r5
     3c4:	66 1c       	adc	r6, r6
     3c6:	77 1c       	adc	r7, r7
     3c8:	8a 95       	dec	r24
     3ca:	d2 f7       	brpl	.-12     	; 0x3c0 <usart_set_baudrate+0x128>
     3cc:	d5 01       	movw	r26, r10
     3ce:	c4 01       	movw	r24, r8
     3d0:	b6 95       	lsr	r27
     3d2:	a7 95       	ror	r26
     3d4:	97 95       	ror	r25
     3d6:	87 95       	ror	r24
     3d8:	bc 01       	movw	r22, r24
     3da:	cd 01       	movw	r24, r26
     3dc:	64 0d       	add	r22, r4
     3de:	75 1d       	adc	r23, r5
     3e0:	86 1d       	adc	r24, r6
     3e2:	97 1d       	adc	r25, r7
     3e4:	a5 01       	movw	r20, r10
     3e6:	94 01       	movw	r18, r8
     3e8:	fb d1       	rcall	.+1014   	; 0x7e0 <__udivmodsi4>
     3ea:	35 c0       	rjmp	.+106    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
		} else {
			baud <<= exp + 3;
     3ec:	83 e0       	ldi	r24, 0x03	; 3
     3ee:	8c 0f       	add	r24, r28
     3f0:	a5 01       	movw	r20, r10
     3f2:	94 01       	movw	r18, r8
     3f4:	04 c0       	rjmp	.+8      	; 0x3fe <usart_set_baudrate+0x166>
     3f6:	22 0f       	add	r18, r18
     3f8:	33 1f       	adc	r19, r19
     3fa:	44 1f       	adc	r20, r20
     3fc:	55 1f       	adc	r21, r21
     3fe:	8a 95       	dec	r24
     400:	d2 f7       	brpl	.-12     	; 0x3f6 <usart_set_baudrate+0x15e>
			div = (cpu_hz + baud / 2) / baud;
     402:	da 01       	movw	r26, r20
     404:	c9 01       	movw	r24, r18
     406:	b6 95       	lsr	r27
     408:	a7 95       	ror	r26
     40a:	97 95       	ror	r25
     40c:	87 95       	ror	r24
     40e:	bc 01       	movw	r22, r24
     410:	cd 01       	movw	r24, r26
     412:	64 0d       	add	r22, r4
     414:	75 1d       	adc	r23, r5
     416:	86 1d       	adc	r24, r6
     418:	97 1d       	adc	r25, r7
     41a:	e2 d1       	rcall	.+964    	; 0x7e0 <__udivmodsi4>
     41c:	1c c0       	rjmp	.+56     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
		}
	} else {
		/* We will always do a right shift in this case, but we need to
		 * shift three extra positions because of the divide-by-8.
		 */
		baud <<= exp + 3;
     41e:	83 e0       	ldi	r24, 0x03	; 3
     420:	8c 0f       	add	r24, r28
     422:	a5 01       	movw	r20, r10
     424:	94 01       	movw	r18, r8
     426:	04 c0       	rjmp	.+8      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     428:	22 0f       	add	r18, r18
     42a:	33 1f       	adc	r19, r19
     42c:	44 1f       	adc	r20, r20
     42e:	55 1f       	adc	r21, r21
     430:	8a 95       	dec	r24
     432:	d2 f7       	brpl	.-12     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		div = (cpu_hz + baud / 2) / baud - 1;
     434:	da 01       	movw	r26, r20
     436:	c9 01       	movw	r24, r18
     438:	b6 95       	lsr	r27
     43a:	a7 95       	ror	r26
     43c:	97 95       	ror	r25
     43e:	87 95       	ror	r24
     440:	bc 01       	movw	r22, r24
     442:	cd 01       	movw	r24, r26
     444:	64 0d       	add	r22, r4
     446:	75 1d       	adc	r23, r5
     448:	86 1d       	adc	r24, r6
     44a:	97 1d       	adc	r25, r7
     44c:	c9 d1       	rcall	.+914    	; 0x7e0 <__udivmodsi4>
     44e:	21 50       	subi	r18, 0x01	; 1
     450:	31 09       	sbc	r19, r1
     452:	41 09       	sbc	r20, r1
     454:	51 09       	sbc	r21, r1
	}

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
     456:	83 2f       	mov	r24, r19
     458:	8f 70       	andi	r24, 0x0F	; 15
     45a:	c2 95       	swap	r28
     45c:	c0 7f       	andi	r28, 0xF0	; 240
     45e:	c8 2b       	or	r28, r24
     460:	f7 01       	movw	r30, r14
     462:	c7 83       	std	Z+7, r28	; 0x07
	(usart)->BAUDCTRLA = (uint8_t)div;
     464:	26 83       	std	Z+6, r18	; 0x06

	return true;
     466:	81 e0       	ldi	r24, 0x01	; 1
     468:	18 c0       	rjmp	.+48     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
		max_rate /= 2;
		min_rate /= 2;
	}

	if ((baud > max_rate) || (baud < min_rate)) {
		return false;
     46a:	80 e0       	ldi	r24, 0x00	; 0
     46c:	16 c0       	rjmp	.+44     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	14 c0       	rjmp	.+40     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
	if (exp < 0) {
		/* We are supposed to subtract 1, then apply BSCALE. We want to
		 * apply BSCALE first, so we need to turn everything inside the
		 * parenthesis into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
     472:	d5 01       	movw	r26, r10
     474:	c4 01       	movw	r24, r8
     476:	88 0f       	add	r24, r24
     478:	99 1f       	adc	r25, r25
     47a:	aa 1f       	adc	r26, r26
     47c:	bb 1f       	adc	r27, r27
     47e:	88 0f       	add	r24, r24
     480:	99 1f       	adc	r25, r25
     482:	aa 1f       	adc	r26, r26
     484:	bb 1f       	adc	r27, r27
     486:	88 0f       	add	r24, r24
     488:	99 1f       	adc	r25, r25
     48a:	aa 1f       	adc	r26, r26
     48c:	bb 1f       	adc	r27, r27
     48e:	48 1a       	sub	r4, r24
     490:	59 0a       	sbc	r5, r25
     492:	6a 0a       	sbc	r6, r26
     494:	7b 0a       	sbc	r7, r27

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
     496:	c9 ef       	ldi	r28, 0xF9	; 249
     498:	8c cf       	rjmp	.-232    	; 0x3b2 <usart_set_baudrate+0x11a>

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
	(usart)->BAUDCTRLA = (uint8_t)div;

	return true;
}
     49a:	cf 91       	pop	r28
     49c:	1f 91       	pop	r17
     49e:	0f 91       	pop	r16
     4a0:	ff 90       	pop	r15
     4a2:	ef 90       	pop	r14
     4a4:	bf 90       	pop	r11
     4a6:	af 90       	pop	r10
     4a8:	9f 90       	pop	r9
     4aa:	8f 90       	pop	r8
     4ac:	7f 90       	pop	r7
     4ae:	6f 90       	pop	r6
     4b0:	5f 90       	pop	r5
     4b2:	4f 90       	pop	r4
     4b4:	08 95       	ret

000004b6 <usart_init_rs232>:
 *
 * \retval true if the initialization was successfull
 * \retval false if the initialization failed (error in baud rate calculation)
 */
bool usart_init_rs232(USART_t *usart, const usart_rs232_options_t *opt)
{
     4b6:	0f 93       	push	r16
     4b8:	1f 93       	push	r17
     4ba:	cf 93       	push	r28
     4bc:	df 93       	push	r29
     4be:	ec 01       	movw	r28, r24
     4c0:	8b 01       	movw	r16, r22
 *
 * \param module Pointer to the module's base address.
 */
static inline void sysclk_enable_peripheral_clock(const volatile void *module)
{
	if (module == NULL) {
     4c2:	00 97       	sbiw	r24, 0x00	; 0
     4c4:	09 f4       	brne	.+2      	; 0x4c8 <usart_init_rs232+0x12>
     4c6:	e6 c0       	rjmp	.+460    	; 0x694 <usart_init_rs232+0x1de>
		Assert(false);
	}
#ifdef AES
	else if (module == &AES) {
     4c8:	80 3c       	cpi	r24, 0xC0	; 192
     4ca:	91 05       	cpc	r25, r1
     4cc:	21 f4       	brne	.+8      	; 0x4d6 <usart_init_rs232+0x20>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_AES);
     4ce:	60 e1       	ldi	r22, 0x10	; 16
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	14 d1       	rcall	.+552    	; 0x6fc <sysclk_enable_module>
     4d4:	df c0       	rjmp	.+446    	; 0x694 <usart_init_rs232+0x1de>
	else if (module == &RTC) {
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_RTC);
	}
#endif
#ifdef EVSYS
	else if (module == &EVSYS) {
     4d6:	c0 38       	cpi	r28, 0x80	; 128
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	d8 07       	cpc	r29, r24
     4dc:	21 f4       	brne	.+8      	; 0x4e6 <usart_init_rs232+0x30>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EVSYS);
     4de:	62 e0       	ldi	r22, 0x02	; 2
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	0c d1       	rcall	.+536    	; 0x6fc <sysclk_enable_module>
     4e4:	d7 c0       	rjmp	.+430    	; 0x694 <usart_init_rs232+0x1de>
	}
#endif
#ifdef DMA
	else if (module == &DMA) {
     4e6:	c1 15       	cp	r28, r1
     4e8:	e1 e0       	ldi	r30, 0x01	; 1
     4ea:	de 07       	cpc	r29, r30
     4ec:	21 f4       	brne	.+8      	; 0x4f6 <usart_init_rs232+0x40>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_DMA);
     4ee:	61 e0       	ldi	r22, 0x01	; 1
     4f0:	80 e0       	ldi	r24, 0x00	; 0
     4f2:	04 d1       	rcall	.+520    	; 0x6fc <sysclk_enable_module>
     4f4:	cf c0       	rjmp	.+414    	; 0x694 <usart_init_rs232+0x1de>
	else if (module == &EDMA) {
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EDMA);
	}
#endif
#ifdef ACA
	else if (module == &ACA) {
     4f6:	c0 38       	cpi	r28, 0x80	; 128
     4f8:	f3 e0       	ldi	r31, 0x03	; 3
     4fa:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_AC);
     4fc:	21 f4       	brne	.+8      	; 0x506 <usart_init_rs232+0x50>
     4fe:	61 e0       	ldi	r22, 0x01	; 1
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	fc d0       	rcall	.+504    	; 0x6fc <sysclk_enable_module>
     504:	c7 c0       	rjmp	.+398    	; 0x694 <usart_init_rs232+0x1de>
	}
#endif
#ifdef ACB
	else if (module == &ACB) {
     506:	c0 39       	cpi	r28, 0x90	; 144
     508:	83 e0       	ldi	r24, 0x03	; 3
     50a:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_AC);
     50c:	21 f4       	brne	.+8      	; 0x516 <usart_init_rs232+0x60>
     50e:	61 e0       	ldi	r22, 0x01	; 1
     510:	82 e0       	ldi	r24, 0x02	; 2
     512:	f4 d0       	rcall	.+488    	; 0x6fc <sysclk_enable_module>
     514:	bf c0       	rjmp	.+382    	; 0x694 <usart_init_rs232+0x1de>
	}
#endif
#ifdef ADCA
	else if (module == &ADCA) {
     516:	c1 15       	cp	r28, r1
     518:	e2 e0       	ldi	r30, 0x02	; 2
     51a:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_ADC);
     51c:	21 f4       	brne	.+8      	; 0x526 <usart_init_rs232+0x70>
     51e:	62 e0       	ldi	r22, 0x02	; 2
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	ec d0       	rcall	.+472    	; 0x6fc <sysclk_enable_module>
     524:	b7 c0       	rjmp	.+366    	; 0x694 <usart_init_rs232+0x1de>
	}
#endif
#ifdef ADCB
	else if (module == &ADCB) {
     526:	c0 34       	cpi	r28, 0x40	; 64
     528:	f2 e0       	ldi	r31, 0x02	; 2
     52a:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_ADC);
     52c:	21 f4       	brne	.+8      	; 0x536 <usart_init_rs232+0x80>
     52e:	62 e0       	ldi	r22, 0x02	; 2
     530:	82 e0       	ldi	r24, 0x02	; 2
     532:	e4 d0       	rcall	.+456    	; 0x6fc <sysclk_enable_module>
	}
#endif
// Workaround for bad XMEGA D header file
#if !XMEGA_D
#ifdef DACB
	else if (module == &DACB) {
     534:	af c0       	rjmp	.+350    	; 0x694 <usart_init_rs232+0x1de>
     536:	c0 32       	cpi	r28, 0x20	; 32
     538:	83 e0       	ldi	r24, 0x03	; 3
     53a:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_DAC);
     53c:	21 f4       	brne	.+8      	; 0x546 <usart_init_rs232+0x90>
     53e:	64 e0       	ldi	r22, 0x04	; 4
     540:	82 e0       	ldi	r24, 0x02	; 2
     542:	dc d0       	rcall	.+440    	; 0x6fc <sysclk_enable_module>
	}
#endif
#endif // Workaround end
#ifdef TCC0
	else if (module == &TCC0) {
     544:	a7 c0       	rjmp	.+334    	; 0x694 <usart_init_rs232+0x1de>
     546:	c1 15       	cp	r28, r1
     548:	e8 e0       	ldi	r30, 0x08	; 8
     54a:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
     54c:	21 f4       	brne	.+8      	; 0x556 <usart_init_rs232+0xa0>
     54e:	61 e0       	ldi	r22, 0x01	; 1
     550:	83 e0       	ldi	r24, 0x03	; 3
     552:	d4 d0       	rcall	.+424    	; 0x6fc <sysclk_enable_module>
	}
#endif
#ifdef TCD0
	else if (module == &TCD0) {
     554:	9f c0       	rjmp	.+318    	; 0x694 <usart_init_rs232+0x1de>
     556:	c1 15       	cp	r28, r1
     558:	f9 e0       	ldi	r31, 0x09	; 9
     55a:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
     55c:	21 f4       	brne	.+8      	; 0x566 <usart_init_rs232+0xb0>
     55e:	61 e0       	ldi	r22, 0x01	; 1
     560:	84 e0       	ldi	r24, 0x04	; 4
     562:	cc d0       	rcall	.+408    	; 0x6fc <sysclk_enable_module>
	}
#endif
#ifdef TCE0
	else if (module == &TCE0) {
     564:	97 c0       	rjmp	.+302    	; 0x694 <usart_init_rs232+0x1de>
     566:	c1 15       	cp	r28, r1
     568:	8a e0       	ldi	r24, 0x0A	; 10
     56a:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
     56c:	21 f4       	brne	.+8      	; 0x576 <usart_init_rs232+0xc0>
     56e:	61 e0       	ldi	r22, 0x01	; 1
     570:	85 e0       	ldi	r24, 0x05	; 5
     572:	c4 d0       	rcall	.+392    	; 0x6fc <sysclk_enable_module>
	}
#endif
#ifdef TCF0
	else if (module == &TCF0) {
     574:	8f c0       	rjmp	.+286    	; 0x694 <usart_init_rs232+0x1de>
     576:	c1 15       	cp	r28, r1
     578:	eb e0       	ldi	r30, 0x0B	; 11
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
     57a:	de 07       	cpc	r29, r30
     57c:	21 f4       	brne	.+8      	; 0x586 <usart_init_rs232+0xd0>
     57e:	61 e0       	ldi	r22, 0x01	; 1
     580:	86 e0       	ldi	r24, 0x06	; 6
     582:	bc d0       	rcall	.+376    	; 0x6fc <sysclk_enable_module>
	}
#endif
#ifdef TCC1
	else if (module == &TCC1) {
     584:	87 c0       	rjmp	.+270    	; 0x694 <usart_init_rs232+0x1de>
     586:	c0 34       	cpi	r28, 0x40	; 64
     588:	f8 e0       	ldi	r31, 0x08	; 8
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
     58a:	df 07       	cpc	r29, r31
     58c:	21 f4       	brne	.+8      	; 0x596 <usart_init_rs232+0xe0>
     58e:	62 e0       	ldi	r22, 0x02	; 2
     590:	83 e0       	ldi	r24, 0x03	; 3
     592:	b4 d0       	rcall	.+360    	; 0x6fc <sysclk_enable_module>
	}
#endif
#ifdef TCD1
	else if (module == &TCD1) {
     594:	7f c0       	rjmp	.+254    	; 0x694 <usart_init_rs232+0x1de>
     596:	c0 34       	cpi	r28, 0x40	; 64
     598:	89 e0       	ldi	r24, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
     59a:	d8 07       	cpc	r29, r24
     59c:	21 f4       	brne	.+8      	; 0x5a6 <usart_init_rs232+0xf0>
     59e:	62 e0       	ldi	r22, 0x02	; 2
     5a0:	84 e0       	ldi	r24, 0x04	; 4
     5a2:	ac d0       	rcall	.+344    	; 0x6fc <sysclk_enable_module>
	}
#endif
#ifdef TCE1
	else if (module == &TCE1) {
     5a4:	77 c0       	rjmp	.+238    	; 0x694 <usart_init_rs232+0x1de>
     5a6:	c0 34       	cpi	r28, 0x40	; 64
     5a8:	ea e0       	ldi	r30, 0x0A	; 10
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
     5aa:	de 07       	cpc	r29, r30
     5ac:	21 f4       	brne	.+8      	; 0x5b6 <usart_init_rs232+0x100>
     5ae:	62 e0       	ldi	r22, 0x02	; 2
     5b0:	85 e0       	ldi	r24, 0x05	; 5
	else if (module == &TCD5) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC5);
	}
#endif
#ifdef HIRESC
	else if (module == &HIRESC) {
     5b2:	a4 d0       	rcall	.+328    	; 0x6fc <sysclk_enable_module>
     5b4:	6f c0       	rjmp	.+222    	; 0x694 <usart_init_rs232+0x1de>
     5b6:	c0 39       	cpi	r28, 0x90	; 144
     5b8:	f8 e0       	ldi	r31, 0x08	; 8
			sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
     5ba:	df 07       	cpc	r29, r31
     5bc:	21 f4       	brne	.+8      	; 0x5c6 <usart_init_rs232+0x110>
     5be:	64 e0       	ldi	r22, 0x04	; 4
     5c0:	83 e0       	ldi	r24, 0x03	; 3
	}
#endif
#ifdef HIRESD
	else if (module == &HIRESD) {
     5c2:	9c d0       	rcall	.+312    	; 0x6fc <sysclk_enable_module>
     5c4:	67 c0       	rjmp	.+206    	; 0x694 <usart_init_rs232+0x1de>
     5c6:	c0 39       	cpi	r28, 0x90	; 144
     5c8:	89 e0       	ldi	r24, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
     5ca:	d8 07       	cpc	r29, r24
     5cc:	21 f4       	brne	.+8      	; 0x5d6 <usart_init_rs232+0x120>
     5ce:	64 e0       	ldi	r22, 0x04	; 4
     5d0:	84 e0       	ldi	r24, 0x04	; 4
	}
#endif
#ifdef HIRESE
	else if (module == &HIRESE) {
     5d2:	94 d0       	rcall	.+296    	; 0x6fc <sysclk_enable_module>
     5d4:	5f c0       	rjmp	.+190    	; 0x694 <usart_init_rs232+0x1de>
     5d6:	c0 39       	cpi	r28, 0x90	; 144
     5d8:	ea e0       	ldi	r30, 0x0A	; 10
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
     5da:	de 07       	cpc	r29, r30
     5dc:	21 f4       	brne	.+8      	; 0x5e6 <usart_init_rs232+0x130>
     5de:	64 e0       	ldi	r22, 0x04	; 4
     5e0:	85 e0       	ldi	r24, 0x05	; 5
	}
#endif
#ifdef HIRESF
	else if (module == &HIRESF) {
     5e2:	8c d0       	rcall	.+280    	; 0x6fc <sysclk_enable_module>
     5e4:	57 c0       	rjmp	.+174    	; 0x694 <usart_init_rs232+0x1de>
     5e6:	c0 39       	cpi	r28, 0x90	; 144
     5e8:	fb e0       	ldi	r31, 0x0B	; 11
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
     5ea:	df 07       	cpc	r29, r31
     5ec:	21 f4       	brne	.+8      	; 0x5f6 <usart_init_rs232+0x140>
     5ee:	64 e0       	ldi	r22, 0x04	; 4
     5f0:	86 e0       	ldi	r24, 0x06	; 6
	}
#endif
#ifdef SPIC
	else if (module == &SPIC) {
     5f2:	84 d0       	rcall	.+264    	; 0x6fc <sysclk_enable_module>
     5f4:	4f c0       	rjmp	.+158    	; 0x694 <usart_init_rs232+0x1de>
     5f6:	c0 3c       	cpi	r28, 0xC0	; 192
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_SPI);
     5f8:	88 e0       	ldi	r24, 0x08	; 8
     5fa:	d8 07       	cpc	r29, r24
     5fc:	21 f4       	brne	.+8      	; 0x606 <usart_init_rs232+0x150>
     5fe:	68 e0       	ldi	r22, 0x08	; 8
     600:	83 e0       	ldi	r24, 0x03	; 3
	}
#endif
#ifdef SPID
	else if (module == &SPID) {
     602:	7c d0       	rcall	.+248    	; 0x6fc <sysclk_enable_module>
     604:	47 c0       	rjmp	.+142    	; 0x694 <usart_init_rs232+0x1de>
     606:	c0 3c       	cpi	r28, 0xC0	; 192
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_SPI);
     608:	e9 e0       	ldi	r30, 0x09	; 9
     60a:	de 07       	cpc	r29, r30
     60c:	21 f4       	brne	.+8      	; 0x616 <usart_init_rs232+0x160>
     60e:	68 e0       	ldi	r22, 0x08	; 8
     610:	84 e0       	ldi	r24, 0x04	; 4
	else if (module == &SPIF) {
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_SPI);
	}
#endif
#ifdef USARTC0
	else if (module == &USARTC0) {
     612:	74 d0       	rcall	.+232    	; 0x6fc <sysclk_enable_module>
     614:	3f c0       	rjmp	.+126    	; 0x694 <usart_init_rs232+0x1de>
     616:	c0 3a       	cpi	r28, 0xA0	; 160
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART0);
     618:	f8 e0       	ldi	r31, 0x08	; 8
     61a:	df 07       	cpc	r29, r31
     61c:	21 f4       	brne	.+8      	; 0x626 <usart_init_rs232+0x170>
     61e:	60 e1       	ldi	r22, 0x10	; 16
     620:	83 e0       	ldi	r24, 0x03	; 3
	}
#endif
#ifdef USARTD0
	else if (module == &USARTD0) {
     622:	6c d0       	rcall	.+216    	; 0x6fc <sysclk_enable_module>
     624:	37 c0       	rjmp	.+110    	; 0x694 <usart_init_rs232+0x1de>
     626:	c0 3a       	cpi	r28, 0xA0	; 160
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART0);
     628:	89 e0       	ldi	r24, 0x09	; 9
     62a:	d8 07       	cpc	r29, r24
     62c:	21 f4       	brne	.+8      	; 0x636 <usart_init_rs232+0x180>
     62e:	60 e1       	ldi	r22, 0x10	; 16
	}
#endif
#ifdef USARTE0
	else if (module == &USARTE0) {
     630:	84 e0       	ldi	r24, 0x04	; 4
     632:	64 d0       	rcall	.+200    	; 0x6fc <sysclk_enable_module>
     634:	2f c0       	rjmp	.+94     	; 0x694 <usart_init_rs232+0x1de>
     636:	c0 3a       	cpi	r28, 0xA0	; 160
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART0);
     638:	ea e0       	ldi	r30, 0x0A	; 10
     63a:	de 07       	cpc	r29, r30
     63c:	21 f4       	brne	.+8      	; 0x646 <usart_init_rs232+0x190>
     63e:	60 e1       	ldi	r22, 0x10	; 16
	}
#endif
#ifdef USARTF0
	else if (module == &USARTF0) {
     640:	85 e0       	ldi	r24, 0x05	; 5
     642:	5c d0       	rcall	.+184    	; 0x6fc <sysclk_enable_module>
     644:	27 c0       	rjmp	.+78     	; 0x694 <usart_init_rs232+0x1de>
     646:	c0 3a       	cpi	r28, 0xA0	; 160
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART0);
     648:	fb e0       	ldi	r31, 0x0B	; 11
     64a:	df 07       	cpc	r29, r31
     64c:	21 f4       	brne	.+8      	; 0x656 <usart_init_rs232+0x1a0>
     64e:	60 e1       	ldi	r22, 0x10	; 16
	}
#endif
#ifdef USARTC1
	else if (module == &USARTC1) {
     650:	86 e0       	ldi	r24, 0x06	; 6
     652:	54 d0       	rcall	.+168    	; 0x6fc <sysclk_enable_module>
     654:	1f c0       	rjmp	.+62     	; 0x694 <usart_init_rs232+0x1de>
     656:	c0 3b       	cpi	r28, 0xB0	; 176
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
     658:	88 e0       	ldi	r24, 0x08	; 8
     65a:	d8 07       	cpc	r29, r24
     65c:	21 f4       	brne	.+8      	; 0x666 <usart_init_rs232+0x1b0>
     65e:	60 e2       	ldi	r22, 0x20	; 32
	}
#endif
#ifdef USARTD1
	else if (module == &USARTD1) {
     660:	83 e0       	ldi	r24, 0x03	; 3
     662:	4c d0       	rcall	.+152    	; 0x6fc <sysclk_enable_module>
     664:	17 c0       	rjmp	.+46     	; 0x694 <usart_init_rs232+0x1de>
     666:	c0 3b       	cpi	r28, 0xB0	; 176
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
     668:	e9 e0       	ldi	r30, 0x09	; 9
     66a:	de 07       	cpc	r29, r30
     66c:	21 f4       	brne	.+8      	; 0x676 <usart_init_rs232+0x1c0>
     66e:	60 e2       	ldi	r22, 0x20	; 32
     670:	84 e0       	ldi	r24, 0x04	; 4
	else if (module == &USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART1);
	}
#endif
#ifdef TWIC
	else if (module == &TWIC) {
     672:	44 d0       	rcall	.+136    	; 0x6fc <sysclk_enable_module>
     674:	0f c0       	rjmp	.+30     	; 0x694 <usart_init_rs232+0x1de>
     676:	c0 38       	cpi	r28, 0x80	; 128
     678:	f4 e0       	ldi	r31, 0x04	; 4
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TWI);
     67a:	df 07       	cpc	r29, r31
     67c:	21 f4       	brne	.+8      	; 0x686 <usart_init_rs232+0x1d0>
     67e:	60 e4       	ldi	r22, 0x40	; 64
     680:	83 e0       	ldi	r24, 0x03	; 3
     682:	3c d0       	rcall	.+120    	; 0x6fc <sysclk_enable_module>
	else if (module == &TWID) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TWI);
	}
#endif
#ifdef TWIE
	else if (module == &TWIE) {
     684:	07 c0       	rjmp	.+14     	; 0x694 <usart_init_rs232+0x1de>
     686:	c0 3a       	cpi	r28, 0xA0	; 160
     688:	84 e0       	ldi	r24, 0x04	; 4
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TWI);
     68a:	d8 07       	cpc	r29, r24
     68c:	19 f4       	brne	.+6      	; 0x694 <usart_init_rs232+0x1de>
     68e:	60 e4       	ldi	r22, 0x40	; 64
     690:	85 e0       	ldi	r24, 0x05	; 5
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
     692:	34 d0       	rcall	.+104    	; 0x6fc <sysclk_enable_module>
     694:	8d 81       	ldd	r24, Y+5	; 0x05
     696:	8f 73       	andi	r24, 0x3F	; 63
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
     698:	8d 83       	std	Y+5, r24	; 0x05
     69a:	f8 01       	movw	r30, r16
     69c:	95 81       	ldd	r25, Z+5	; 0x05
     69e:	84 81       	ldd	r24, Z+4	; 0x04
     6a0:	89 2b       	or	r24, r25
     6a2:	96 81       	ldd	r25, Z+6	; 0x06
     6a4:	91 11       	cpse	r25, r1
     6a6:	98 e0       	ldi	r25, 0x08	; 8
     6a8:	89 2b       	or	r24, r25
	bool result;
	sysclk_enable_peripheral_clock(usart);
	usart_set_mode(usart, USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(usart, opt->charlength, opt->paritytype,
			opt->stopbits);
	result = usart_set_baudrate(usart, opt->baudrate, sysclk_get_per_hz());
     6aa:	8d 83       	std	Y+5, r24	; 0x05
     6ac:	f8 01       	movw	r30, r16
     6ae:	40 81       	ld	r20, Z
     6b0:	51 81       	ldd	r21, Z+1	; 0x01
     6b2:	62 81       	ldd	r22, Z+2	; 0x02
     6b4:	73 81       	ldd	r23, Z+3	; 0x03
     6b6:	00 e8       	ldi	r16, 0x80	; 128
     6b8:	14 e8       	ldi	r17, 0x84	; 132
     6ba:	2e e1       	ldi	r18, 0x1E	; 30
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	ce 01       	movw	r24, r28
     6c0:	eb dd       	rcall	.-1066   	; 0x298 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
     6c2:	9c 81       	ldd	r25, Y+4	; 0x04
     6c4:	98 60       	ori	r25, 0x08	; 8
     6c6:	9c 83       	std	Y+4, r25	; 0x04
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
     6c8:	9c 81       	ldd	r25, Y+4	; 0x04
     6ca:	90 61       	ori	r25, 0x10	; 16
     6cc:	9c 83       	std	Y+4, r25	; 0x04
	usart_tx_enable(usart);
	usart_rx_enable(usart);
	
	return result;
}
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	08 95       	ret

000006d8 <_write>:
#elif (defined(__GNUC__) && (XMEGA || MEGA))

int _write (char c, int *f);

int _write (char c, int *f)
{
     6d8:	68 2f       	mov	r22, r24
	if (ptr_put(stdio_base, c) < 0) {
     6da:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <stdio_base>
     6de:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <stdio_base+0x1>
     6e2:	e0 91 14 20 	lds	r30, 0x2014	; 0x802014 <ptr_put>
     6e6:	f0 91 15 20 	lds	r31, 0x2015	; 0x802015 <ptr_put+0x1>
     6ea:	19 95       	eicall
     6ec:	99 23       	and	r25, r25
     6ee:	1c f0       	brlt	.+6      	; 0x6f6 <_write+0x1e>
		return -1;
	}
	return 1;
     6f0:	81 e0       	ldi	r24, 0x01	; 1
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	08 95       	ret
int _write (char c, int *f);

int _write (char c, int *f)
{
	if (ptr_put(stdio_base, c) < 0) {
		return -1;
     6f6:	8f ef       	ldi	r24, 0xFF	; 255
     6f8:	9f ef       	ldi	r25, 0xFF	; 255
	}
	return 1;
}
     6fa:	08 95       	ret

000006fc <sysclk_enable_module>:
	sysclk_rtcsrc_enable(CONFIG_RTC_SOURCE);
#endif
}

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
     6fc:	cf 93       	push	r28
     6fe:	df 93       	push	r29
     700:	1f 92       	push	r1
     702:	cd b7       	in	r28, 0x3d	; 61
     704:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     706:	9f b7       	in	r25, 0x3f	; 63
     708:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     70a:	f8 94       	cli
	return flags;
     70c:	99 81       	ldd	r25, Y+1	; 0x01
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
     70e:	e8 2f       	mov	r30, r24
     710:	f0 e0       	ldi	r31, 0x00	; 0
     712:	e0 59       	subi	r30, 0x90	; 144
     714:	ff 4f       	sbci	r31, 0xFF	; 255
     716:	60 95       	com	r22
     718:	80 81       	ld	r24, Z
     71a:	68 23       	and	r22, r24
     71c:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     71e:	9f bf       	out	0x3f, r25	; 63

	cpu_irq_restore(flags);
}
     720:	0f 90       	pop	r0
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	08 95       	ret

00000728 <usart_serial_getchar>:
 * \param usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if usart, uint8_t *data)
{
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	eb 01       	movw	r28, r22
	*data = usart_getchar(usart);
     72e:	ae dd       	rcall	.-1188   	; 0x28c <usart_getchar>
     730:	88 83       	st	Y, r24
}
     732:	df 91       	pop	r29
     734:	cf 91       	pop	r28
     736:	08 95       	ret

00000738 <usart_serial_putchar>:
 *
 * \return Status code
 */
static inline enum status_code usart_serial_putchar(usart_if usart, uint8_t c)
{
	return usart_putchar(usart, c);
     738:	a1 cd       	rjmp	.-1214   	; 0x27c <usart_putchar>
}
     73a:	08 95       	ret

0000073c <main>:
#include <asf.h>

#define UART_TXPIN IOPORT_CREATE_PIN(PORTE, 3)

int main (void) {
     73c:	cf 93       	push	r28
     73e:	df 93       	push	r29
     740:	cd b7       	in	r28, 0x3d	; 61
     742:	de b7       	in	r29, 0x3e	; 62
     744:	27 97       	sbiw	r28, 0x07	; 7
     746:	cd bf       	out	0x3d, r28	; 61
     748:	de bf       	out	0x3e, r29	; 62
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
     74a:	80 ea       	ldi	r24, 0xA0	; 160
     74c:	9a e0       	ldi	r25, 0x0A	; 10
     74e:	80 93 16 20 	sts	0x2016, r24	; 0x802016 <stdio_base>
     752:	90 93 17 20 	sts	0x2017, r25	; 0x802017 <stdio_base+0x1>
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
     756:	8c e9       	ldi	r24, 0x9C	; 156
     758:	93 e0       	ldi	r25, 0x03	; 3
     75a:	80 93 14 20 	sts	0x2014, r24	; 0x802014 <ptr_put>
     75e:	90 93 15 20 	sts	0x2015, r25	; 0x802015 <ptr_put+0x1>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
     762:	84 e9       	ldi	r24, 0x94	; 148
     764:	93 e0       	ldi	r25, 0x03	; 3
     766:	80 93 12 20 	sts	0x2012, r24	; 0x802012 <__data_end>
     76a:	90 93 13 20 	sts	0x2013, r25	; 0x802013 <__data_end+0x1>
static inline bool usart_serial_init(usart_if usart, const
		usart_serial_options_t *options)
{
	// USART options.
	usart_rs232_options_t usart_rs232_options;
	usart_rs232_options.charlength   = options->charlength;
     76e:	e6 e0       	ldi	r30, 0x06	; 6
     770:	f0 e2       	ldi	r31, 0x20	; 32
     772:	84 81       	ldd	r24, Z+4	; 0x04
     774:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
     776:	85 81       	ldd	r24, Z+5	; 0x05
     778:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
     77a:	86 81       	ldd	r24, Z+6	; 0x06
     77c:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
     77e:	80 81       	ld	r24, Z
     780:	91 81       	ldd	r25, Z+1	; 0x01
     782:	a2 81       	ldd	r26, Z+2	; 0x02
     784:	b3 81       	ldd	r27, Z+3	; 0x03
     786:	89 83       	std	Y+1, r24	; 0x01
     788:	9a 83       	std	Y+2, r25	; 0x02
     78a:	ab 83       	std	Y+3, r26	; 0x03
     78c:	bc 83       	std	Y+4, r27	; 0x04
		sysclk_enable_module(SYSCLK_PORT_D,PR_USART1_bm);
	}
#endif
#ifdef USARTE0
	if((uint16_t)usart == (uint16_t)&USARTE0) {
		sysclk_enable_module(SYSCLK_PORT_E,PR_USART0_bm);
     78e:	60 e1       	ldi	r22, 0x10	; 16
     790:	85 e0       	ldi	r24, 0x05	; 5
     792:	b4 df       	rcall	.-152    	; 0x6fc <sysclk_enable_module>
#ifdef USARTF1
	if((uint16_t)usart == (uint16_t)&USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F,PR_USART1_bm);
	}
#endif
	if (usart_init_rs232(usart, &usart_rs232_options)) {
     794:	be 01       	movw	r22, r28
     796:	6f 5f       	subi	r22, 0xFF	; 255
     798:	7f 4f       	sbci	r23, 0xFF	; 255
     79a:	80 ea       	ldi	r24, 0xA0	; 160
     79c:	9a e0       	ldi	r25, 0x0A	; 10
     79e:	8b de       	rcall	.-746    	; 0x4b6 <usart_init_rs232>
# endif

# if defined(__GNUC__)
#  if (XMEGA || MEGA_RF)
	// For AVR GCC libc print redirection uses fdevopen.
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
     7a0:	65 e2       	ldi	r22, 0x25	; 37
     7a2:	71 e0       	ldi	r23, 0x01	; 1
     7a4:	8c e6       	ldi	r24, 0x6C	; 108
     7a6:	93 e0       	ldi	r25, 0x03	; 3
     7a8:	3d d0       	rcall	.+122    	; 0x824 <fdevopen>
		enum ioport_direction dir)
{
	PORT_t *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->DIRSET = arch_ioport_pin_to_mask(pin);
     7aa:	88 e0       	ldi	r24, 0x08	; 8
     7ac:	80 93 81 06 	sts	0x0681, r24	; 0x800681 <__TEXT_REGION_LENGTH__+0x700681>
	
	while(1) {
		
		char ch;
		
		scanf("%s",&ch);
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	6c 01       	movw	r12, r24
     7b6:	0f 2e       	mov	r0, r31
     7b8:	fe e0       	ldi	r31, 0x0E	; 14
     7ba:	ef 2e       	mov	r14, r31
     7bc:	f0 e2       	ldi	r31, 0x20	; 32
     7be:	ff 2e       	mov	r15, r31
     7c0:	f0 2d       	mov	r31, r0
		printf("\n%s",&ch);
     7c2:	0d e0       	ldi	r16, 0x0D	; 13
     7c4:	10 e2       	ldi	r17, 0x20	; 32
	
	while(1) {
		
		char ch;
		
		scanf("%s",&ch);
     7c6:	df 92       	push	r13
     7c8:	cf 92       	push	r12
     7ca:	ff 92       	push	r15
     7cc:	ef 92       	push	r14
     7ce:	87 d0       	rcall	.+270    	; 0x8de <scanf>
		printf("\n%s",&ch);
     7d0:	df 92       	push	r13
     7d2:	cf 92       	push	r12
     7d4:	1f 93       	push	r17
     7d6:	0f 93       	push	r16
     7d8:	6f d0       	rcall	.+222    	; 0x8b8 <printf>
     7da:	cd bf       	out	0x3d, r28	; 61
     7dc:	de bf       	out	0x3e, r29	; 62
     7de:	f3 cf       	rjmp	.-26     	; 0x7c6 <main+0x8a>

000007e0 <__udivmodsi4>:
     7e0:	a1 e2       	ldi	r26, 0x21	; 33
     7e2:	1a 2e       	mov	r1, r26
     7e4:	aa 1b       	sub	r26, r26
     7e6:	bb 1b       	sub	r27, r27
     7e8:	fd 01       	movw	r30, r26
     7ea:	0d c0       	rjmp	.+26     	; 0x806 <__udivmodsi4_ep>

000007ec <__udivmodsi4_loop>:
     7ec:	aa 1f       	adc	r26, r26
     7ee:	bb 1f       	adc	r27, r27
     7f0:	ee 1f       	adc	r30, r30
     7f2:	ff 1f       	adc	r31, r31
     7f4:	a2 17       	cp	r26, r18
     7f6:	b3 07       	cpc	r27, r19
     7f8:	e4 07       	cpc	r30, r20
     7fa:	f5 07       	cpc	r31, r21
     7fc:	20 f0       	brcs	.+8      	; 0x806 <__udivmodsi4_ep>
     7fe:	a2 1b       	sub	r26, r18
     800:	b3 0b       	sbc	r27, r19
     802:	e4 0b       	sbc	r30, r20
     804:	f5 0b       	sbc	r31, r21

00000806 <__udivmodsi4_ep>:
     806:	66 1f       	adc	r22, r22
     808:	77 1f       	adc	r23, r23
     80a:	88 1f       	adc	r24, r24
     80c:	99 1f       	adc	r25, r25
     80e:	1a 94       	dec	r1
     810:	69 f7       	brne	.-38     	; 0x7ec <__udivmodsi4_loop>
     812:	60 95       	com	r22
     814:	70 95       	com	r23
     816:	80 95       	com	r24
     818:	90 95       	com	r25
     81a:	9b 01       	movw	r18, r22
     81c:	ac 01       	movw	r20, r24
     81e:	bd 01       	movw	r22, r26
     820:	cf 01       	movw	r24, r30
     822:	08 95       	ret

00000824 <fdevopen>:
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	00 97       	sbiw	r24, 0x00	; 0
     82e:	31 f4       	brne	.+12     	; 0x83c <fdevopen+0x18>
     830:	61 15       	cp	r22, r1
     832:	71 05       	cpc	r23, r1
     834:	19 f4       	brne	.+6      	; 0x83c <fdevopen+0x18>
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	39 c0       	rjmp	.+114    	; 0x8ae <fdevopen+0x8a>
     83c:	8b 01       	movw	r16, r22
     83e:	ec 01       	movw	r28, r24
     840:	6e e0       	ldi	r22, 0x0E	; 14
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	17 d5       	rcall	.+2606   	; 0x1278 <calloc>
     84a:	fc 01       	movw	r30, r24
     84c:	89 2b       	or	r24, r25
     84e:	99 f3       	breq	.-26     	; 0x836 <fdevopen+0x12>
     850:	80 e8       	ldi	r24, 0x80	; 128
     852:	83 83       	std	Z+3, r24	; 0x03
     854:	01 15       	cp	r16, r1
     856:	11 05       	cpc	r17, r1
     858:	71 f0       	breq	.+28     	; 0x876 <fdevopen+0x52>
     85a:	02 87       	std	Z+10, r16	; 0x0a
     85c:	13 87       	std	Z+11, r17	; 0x0b
     85e:	81 e8       	ldi	r24, 0x81	; 129
     860:	83 83       	std	Z+3, r24	; 0x03
     862:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <__iob>
     866:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <__iob+0x1>
     86a:	89 2b       	or	r24, r25
     86c:	21 f4       	brne	.+8      	; 0x876 <fdevopen+0x52>
     86e:	e0 93 18 20 	sts	0x2018, r30	; 0x802018 <__iob>
     872:	f0 93 19 20 	sts	0x2019, r31	; 0x802019 <__iob+0x1>
     876:	20 97       	sbiw	r28, 0x00	; 0
     878:	c9 f0       	breq	.+50     	; 0x8ac <fdevopen+0x88>
     87a:	c0 87       	std	Z+8, r28	; 0x08
     87c:	d1 87       	std	Z+9, r29	; 0x09
     87e:	83 81       	ldd	r24, Z+3	; 0x03
     880:	82 60       	ori	r24, 0x02	; 2
     882:	83 83       	std	Z+3, r24	; 0x03
     884:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__iob+0x2>
     888:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__iob+0x3>
     88c:	89 2b       	or	r24, r25
     88e:	71 f4       	brne	.+28     	; 0x8ac <fdevopen+0x88>
     890:	e0 93 1a 20 	sts	0x201A, r30	; 0x80201a <__iob+0x2>
     894:	f0 93 1b 20 	sts	0x201B, r31	; 0x80201b <__iob+0x3>
     898:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <__iob+0x4>
     89c:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <__iob+0x5>
     8a0:	89 2b       	or	r24, r25
     8a2:	21 f4       	brne	.+8      	; 0x8ac <fdevopen+0x88>
     8a4:	e0 93 1c 20 	sts	0x201C, r30	; 0x80201c <__iob+0x4>
     8a8:	f0 93 1d 20 	sts	0x201D, r31	; 0x80201d <__iob+0x5>
     8ac:	cf 01       	movw	r24, r30
     8ae:	df 91       	pop	r29
     8b0:	cf 91       	pop	r28
     8b2:	1f 91       	pop	r17
     8b4:	0f 91       	pop	r16
     8b6:	08 95       	ret

000008b8 <printf>:
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	cd b7       	in	r28, 0x3d	; 61
     8be:	de b7       	in	r29, 0x3e	; 62
     8c0:	ae 01       	movw	r20, r28
     8c2:	4a 5f       	subi	r20, 0xFA	; 250
     8c4:	5f 4f       	sbci	r21, 0xFF	; 255
     8c6:	fa 01       	movw	r30, r20
     8c8:	61 91       	ld	r22, Z+
     8ca:	71 91       	ld	r23, Z+
     8cc:	af 01       	movw	r20, r30
     8ce:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__iob+0x2>
     8d2:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__iob+0x3>
     8d6:	16 d0       	rcall	.+44     	; 0x904 <vfprintf>
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	08 95       	ret

000008de <scanf>:
     8de:	cf 93       	push	r28
     8e0:	df 93       	push	r29
     8e2:	cd b7       	in	r28, 0x3d	; 61
     8e4:	de b7       	in	r29, 0x3e	; 62
     8e6:	ae 01       	movw	r20, r28
     8e8:	4a 5f       	subi	r20, 0xFA	; 250
     8ea:	5f 4f       	sbci	r21, 0xFF	; 255
     8ec:	fa 01       	movw	r30, r20
     8ee:	61 91       	ld	r22, Z+
     8f0:	71 91       	ld	r23, Z+
     8f2:	af 01       	movw	r20, r30
     8f4:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <__iob>
     8f8:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <__iob+0x1>
     8fc:	a6 d3       	rcall	.+1868   	; 0x104a <vfscanf>
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	08 95       	ret

00000904 <vfprintf>:
     904:	2f 92       	push	r2
     906:	3f 92       	push	r3
     908:	4f 92       	push	r4
     90a:	5f 92       	push	r5
     90c:	6f 92       	push	r6
     90e:	7f 92       	push	r7
     910:	8f 92       	push	r8
     912:	9f 92       	push	r9
     914:	af 92       	push	r10
     916:	bf 92       	push	r11
     918:	cf 92       	push	r12
     91a:	df 92       	push	r13
     91c:	ef 92       	push	r14
     91e:	ff 92       	push	r15
     920:	0f 93       	push	r16
     922:	1f 93       	push	r17
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	cd b7       	in	r28, 0x3d	; 61
     92a:	de b7       	in	r29, 0x3e	; 62
     92c:	2b 97       	sbiw	r28, 0x0b	; 11
     92e:	cd bf       	out	0x3d, r28	; 61
     930:	de bf       	out	0x3e, r29	; 62
     932:	6c 01       	movw	r12, r24
     934:	7b 01       	movw	r14, r22
     936:	8a 01       	movw	r16, r20
     938:	fc 01       	movw	r30, r24
     93a:	16 82       	std	Z+6, r1	; 0x06
     93c:	17 82       	std	Z+7, r1	; 0x07
     93e:	83 81       	ldd	r24, Z+3	; 0x03
     940:	81 ff       	sbrs	r24, 1
     942:	bf c1       	rjmp	.+894    	; 0xcc2 <vfprintf+0x3be>
     944:	ce 01       	movw	r24, r28
     946:	01 96       	adiw	r24, 0x01	; 1
     948:	3c 01       	movw	r6, r24
     94a:	f6 01       	movw	r30, r12
     94c:	93 81       	ldd	r25, Z+3	; 0x03
     94e:	f7 01       	movw	r30, r14
     950:	93 fd       	sbrc	r25, 3
     952:	85 91       	lpm	r24, Z+
     954:	93 ff       	sbrs	r25, 3
     956:	81 91       	ld	r24, Z+
     958:	7f 01       	movw	r14, r30
     95a:	88 23       	and	r24, r24
     95c:	09 f4       	brne	.+2      	; 0x960 <vfprintf+0x5c>
     95e:	ad c1       	rjmp	.+858    	; 0xcba <vfprintf+0x3b6>
     960:	85 32       	cpi	r24, 0x25	; 37
     962:	39 f4       	brne	.+14     	; 0x972 <vfprintf+0x6e>
     964:	93 fd       	sbrc	r25, 3
     966:	85 91       	lpm	r24, Z+
     968:	93 ff       	sbrs	r25, 3
     96a:	81 91       	ld	r24, Z+
     96c:	7f 01       	movw	r14, r30
     96e:	85 32       	cpi	r24, 0x25	; 37
     970:	21 f4       	brne	.+8      	; 0x97a <vfprintf+0x76>
     972:	b6 01       	movw	r22, r12
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	29 d6       	rcall	.+3154   	; 0x15ca <fputc>
     978:	e8 cf       	rjmp	.-48     	; 0x94a <vfprintf+0x46>
     97a:	91 2c       	mov	r9, r1
     97c:	21 2c       	mov	r2, r1
     97e:	31 2c       	mov	r3, r1
     980:	ff e1       	ldi	r31, 0x1F	; 31
     982:	f3 15       	cp	r31, r3
     984:	d8 f0       	brcs	.+54     	; 0x9bc <vfprintf+0xb8>
     986:	8b 32       	cpi	r24, 0x2B	; 43
     988:	79 f0       	breq	.+30     	; 0x9a8 <vfprintf+0xa4>
     98a:	38 f4       	brcc	.+14     	; 0x99a <vfprintf+0x96>
     98c:	80 32       	cpi	r24, 0x20	; 32
     98e:	79 f0       	breq	.+30     	; 0x9ae <vfprintf+0xaa>
     990:	83 32       	cpi	r24, 0x23	; 35
     992:	a1 f4       	brne	.+40     	; 0x9bc <vfprintf+0xb8>
     994:	23 2d       	mov	r18, r3
     996:	20 61       	ori	r18, 0x10	; 16
     998:	1d c0       	rjmp	.+58     	; 0x9d4 <vfprintf+0xd0>
     99a:	8d 32       	cpi	r24, 0x2D	; 45
     99c:	61 f0       	breq	.+24     	; 0x9b6 <vfprintf+0xb2>
     99e:	80 33       	cpi	r24, 0x30	; 48
     9a0:	69 f4       	brne	.+26     	; 0x9bc <vfprintf+0xb8>
     9a2:	23 2d       	mov	r18, r3
     9a4:	21 60       	ori	r18, 0x01	; 1
     9a6:	16 c0       	rjmp	.+44     	; 0x9d4 <vfprintf+0xd0>
     9a8:	83 2d       	mov	r24, r3
     9aa:	82 60       	ori	r24, 0x02	; 2
     9ac:	38 2e       	mov	r3, r24
     9ae:	e3 2d       	mov	r30, r3
     9b0:	e4 60       	ori	r30, 0x04	; 4
     9b2:	3e 2e       	mov	r3, r30
     9b4:	2a c0       	rjmp	.+84     	; 0xa0a <vfprintf+0x106>
     9b6:	f3 2d       	mov	r31, r3
     9b8:	f8 60       	ori	r31, 0x08	; 8
     9ba:	1d c0       	rjmp	.+58     	; 0x9f6 <vfprintf+0xf2>
     9bc:	37 fc       	sbrc	r3, 7
     9be:	2d c0       	rjmp	.+90     	; 0xa1a <vfprintf+0x116>
     9c0:	20 ed       	ldi	r18, 0xD0	; 208
     9c2:	28 0f       	add	r18, r24
     9c4:	2a 30       	cpi	r18, 0x0A	; 10
     9c6:	40 f0       	brcs	.+16     	; 0x9d8 <vfprintf+0xd4>
     9c8:	8e 32       	cpi	r24, 0x2E	; 46
     9ca:	b9 f4       	brne	.+46     	; 0x9fa <vfprintf+0xf6>
     9cc:	36 fc       	sbrc	r3, 6
     9ce:	75 c1       	rjmp	.+746    	; 0xcba <vfprintf+0x3b6>
     9d0:	23 2d       	mov	r18, r3
     9d2:	20 64       	ori	r18, 0x40	; 64
     9d4:	32 2e       	mov	r3, r18
     9d6:	19 c0       	rjmp	.+50     	; 0xa0a <vfprintf+0x106>
     9d8:	36 fe       	sbrs	r3, 6
     9da:	06 c0       	rjmp	.+12     	; 0x9e8 <vfprintf+0xe4>
     9dc:	8a e0       	ldi	r24, 0x0A	; 10
     9de:	98 9e       	mul	r9, r24
     9e0:	20 0d       	add	r18, r0
     9e2:	11 24       	eor	r1, r1
     9e4:	92 2e       	mov	r9, r18
     9e6:	11 c0       	rjmp	.+34     	; 0xa0a <vfprintf+0x106>
     9e8:	ea e0       	ldi	r30, 0x0A	; 10
     9ea:	2e 9e       	mul	r2, r30
     9ec:	20 0d       	add	r18, r0
     9ee:	11 24       	eor	r1, r1
     9f0:	22 2e       	mov	r2, r18
     9f2:	f3 2d       	mov	r31, r3
     9f4:	f0 62       	ori	r31, 0x20	; 32
     9f6:	3f 2e       	mov	r3, r31
     9f8:	08 c0       	rjmp	.+16     	; 0xa0a <vfprintf+0x106>
     9fa:	8c 36       	cpi	r24, 0x6C	; 108
     9fc:	21 f4       	brne	.+8      	; 0xa06 <vfprintf+0x102>
     9fe:	83 2d       	mov	r24, r3
     a00:	80 68       	ori	r24, 0x80	; 128
     a02:	38 2e       	mov	r3, r24
     a04:	02 c0       	rjmp	.+4      	; 0xa0a <vfprintf+0x106>
     a06:	88 36       	cpi	r24, 0x68	; 104
     a08:	41 f4       	brne	.+16     	; 0xa1a <vfprintf+0x116>
     a0a:	f7 01       	movw	r30, r14
     a0c:	93 fd       	sbrc	r25, 3
     a0e:	85 91       	lpm	r24, Z+
     a10:	93 ff       	sbrs	r25, 3
     a12:	81 91       	ld	r24, Z+
     a14:	7f 01       	movw	r14, r30
     a16:	81 11       	cpse	r24, r1
     a18:	b3 cf       	rjmp	.-154    	; 0x980 <vfprintf+0x7c>
     a1a:	98 2f       	mov	r25, r24
     a1c:	9f 7d       	andi	r25, 0xDF	; 223
     a1e:	95 54       	subi	r25, 0x45	; 69
     a20:	93 30       	cpi	r25, 0x03	; 3
     a22:	28 f4       	brcc	.+10     	; 0xa2e <vfprintf+0x12a>
     a24:	0c 5f       	subi	r16, 0xFC	; 252
     a26:	1f 4f       	sbci	r17, 0xFF	; 255
     a28:	9f e3       	ldi	r25, 0x3F	; 63
     a2a:	99 83       	std	Y+1, r25	; 0x01
     a2c:	0d c0       	rjmp	.+26     	; 0xa48 <vfprintf+0x144>
     a2e:	83 36       	cpi	r24, 0x63	; 99
     a30:	31 f0       	breq	.+12     	; 0xa3e <vfprintf+0x13a>
     a32:	83 37       	cpi	r24, 0x73	; 115
     a34:	71 f0       	breq	.+28     	; 0xa52 <vfprintf+0x14e>
     a36:	83 35       	cpi	r24, 0x53	; 83
     a38:	09 f0       	breq	.+2      	; 0xa3c <vfprintf+0x138>
     a3a:	55 c0       	rjmp	.+170    	; 0xae6 <vfprintf+0x1e2>
     a3c:	20 c0       	rjmp	.+64     	; 0xa7e <vfprintf+0x17a>
     a3e:	f8 01       	movw	r30, r16
     a40:	80 81       	ld	r24, Z
     a42:	89 83       	std	Y+1, r24	; 0x01
     a44:	0e 5f       	subi	r16, 0xFE	; 254
     a46:	1f 4f       	sbci	r17, 0xFF	; 255
     a48:	88 24       	eor	r8, r8
     a4a:	83 94       	inc	r8
     a4c:	91 2c       	mov	r9, r1
     a4e:	53 01       	movw	r10, r6
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <vfprintf+0x172>
     a52:	28 01       	movw	r4, r16
     a54:	f2 e0       	ldi	r31, 0x02	; 2
     a56:	4f 0e       	add	r4, r31
     a58:	51 1c       	adc	r5, r1
     a5a:	f8 01       	movw	r30, r16
     a5c:	a0 80       	ld	r10, Z
     a5e:	b1 80       	ldd	r11, Z+1	; 0x01
     a60:	36 fe       	sbrs	r3, 6
     a62:	03 c0       	rjmp	.+6      	; 0xa6a <vfprintf+0x166>
     a64:	69 2d       	mov	r22, r9
     a66:	70 e0       	ldi	r23, 0x00	; 0
     a68:	02 c0       	rjmp	.+4      	; 0xa6e <vfprintf+0x16a>
     a6a:	6f ef       	ldi	r22, 0xFF	; 255
     a6c:	7f ef       	ldi	r23, 0xFF	; 255
     a6e:	c5 01       	movw	r24, r10
     a70:	63 d5       	rcall	.+2758   	; 0x1538 <strnlen>
     a72:	4c 01       	movw	r8, r24
     a74:	82 01       	movw	r16, r4
     a76:	f3 2d       	mov	r31, r3
     a78:	ff 77       	andi	r31, 0x7F	; 127
     a7a:	3f 2e       	mov	r3, r31
     a7c:	15 c0       	rjmp	.+42     	; 0xaa8 <vfprintf+0x1a4>
     a7e:	28 01       	movw	r4, r16
     a80:	22 e0       	ldi	r18, 0x02	; 2
     a82:	42 0e       	add	r4, r18
     a84:	51 1c       	adc	r5, r1
     a86:	f8 01       	movw	r30, r16
     a88:	a0 80       	ld	r10, Z
     a8a:	b1 80       	ldd	r11, Z+1	; 0x01
     a8c:	36 fe       	sbrs	r3, 6
     a8e:	03 c0       	rjmp	.+6      	; 0xa96 <vfprintf+0x192>
     a90:	69 2d       	mov	r22, r9
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	02 c0       	rjmp	.+4      	; 0xa9a <vfprintf+0x196>
     a96:	6f ef       	ldi	r22, 0xFF	; 255
     a98:	7f ef       	ldi	r23, 0xFF	; 255
     a9a:	c5 01       	movw	r24, r10
     a9c:	3b d5       	rcall	.+2678   	; 0x1514 <strnlen_P>
     a9e:	4c 01       	movw	r8, r24
     aa0:	f3 2d       	mov	r31, r3
     aa2:	f0 68       	ori	r31, 0x80	; 128
     aa4:	3f 2e       	mov	r3, r31
     aa6:	82 01       	movw	r16, r4
     aa8:	33 fc       	sbrc	r3, 3
     aaa:	19 c0       	rjmp	.+50     	; 0xade <vfprintf+0x1da>
     aac:	82 2d       	mov	r24, r2
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	88 16       	cp	r8, r24
     ab2:	99 06       	cpc	r9, r25
     ab4:	a0 f4       	brcc	.+40     	; 0xade <vfprintf+0x1da>
     ab6:	b6 01       	movw	r22, r12
     ab8:	80 e2       	ldi	r24, 0x20	; 32
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	86 d5       	rcall	.+2828   	; 0x15ca <fputc>
     abe:	2a 94       	dec	r2
     ac0:	f5 cf       	rjmp	.-22     	; 0xaac <vfprintf+0x1a8>
     ac2:	f5 01       	movw	r30, r10
     ac4:	37 fc       	sbrc	r3, 7
     ac6:	85 91       	lpm	r24, Z+
     ac8:	37 fe       	sbrs	r3, 7
     aca:	81 91       	ld	r24, Z+
     acc:	5f 01       	movw	r10, r30
     ace:	b6 01       	movw	r22, r12
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	7b d5       	rcall	.+2806   	; 0x15ca <fputc>
     ad4:	21 10       	cpse	r2, r1
     ad6:	2a 94       	dec	r2
     ad8:	21 e0       	ldi	r18, 0x01	; 1
     ada:	82 1a       	sub	r8, r18
     adc:	91 08       	sbc	r9, r1
     ade:	81 14       	cp	r8, r1
     ae0:	91 04       	cpc	r9, r1
     ae2:	79 f7       	brne	.-34     	; 0xac2 <vfprintf+0x1be>
     ae4:	e1 c0       	rjmp	.+450    	; 0xca8 <vfprintf+0x3a4>
     ae6:	84 36       	cpi	r24, 0x64	; 100
     ae8:	11 f0       	breq	.+4      	; 0xaee <vfprintf+0x1ea>
     aea:	89 36       	cpi	r24, 0x69	; 105
     aec:	39 f5       	brne	.+78     	; 0xb3c <vfprintf+0x238>
     aee:	f8 01       	movw	r30, r16
     af0:	37 fe       	sbrs	r3, 7
     af2:	07 c0       	rjmp	.+14     	; 0xb02 <vfprintf+0x1fe>
     af4:	60 81       	ld	r22, Z
     af6:	71 81       	ldd	r23, Z+1	; 0x01
     af8:	82 81       	ldd	r24, Z+2	; 0x02
     afa:	93 81       	ldd	r25, Z+3	; 0x03
     afc:	0c 5f       	subi	r16, 0xFC	; 252
     afe:	1f 4f       	sbci	r17, 0xFF	; 255
     b00:	08 c0       	rjmp	.+16     	; 0xb12 <vfprintf+0x20e>
     b02:	60 81       	ld	r22, Z
     b04:	71 81       	ldd	r23, Z+1	; 0x01
     b06:	07 2e       	mov	r0, r23
     b08:	00 0c       	add	r0, r0
     b0a:	88 0b       	sbc	r24, r24
     b0c:	99 0b       	sbc	r25, r25
     b0e:	0e 5f       	subi	r16, 0xFE	; 254
     b10:	1f 4f       	sbci	r17, 0xFF	; 255
     b12:	f3 2d       	mov	r31, r3
     b14:	ff 76       	andi	r31, 0x6F	; 111
     b16:	3f 2e       	mov	r3, r31
     b18:	97 ff       	sbrs	r25, 7
     b1a:	09 c0       	rjmp	.+18     	; 0xb2e <vfprintf+0x22a>
     b1c:	90 95       	com	r25
     b1e:	80 95       	com	r24
     b20:	70 95       	com	r23
     b22:	61 95       	neg	r22
     b24:	7f 4f       	sbci	r23, 0xFF	; 255
     b26:	8f 4f       	sbci	r24, 0xFF	; 255
     b28:	9f 4f       	sbci	r25, 0xFF	; 255
     b2a:	f0 68       	ori	r31, 0x80	; 128
     b2c:	3f 2e       	mov	r3, r31
     b2e:	2a e0       	ldi	r18, 0x0A	; 10
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	a3 01       	movw	r20, r6
     b34:	9f d5       	rcall	.+2878   	; 0x1674 <__ultoa_invert>
     b36:	88 2e       	mov	r8, r24
     b38:	86 18       	sub	r8, r6
     b3a:	44 c0       	rjmp	.+136    	; 0xbc4 <vfprintf+0x2c0>
     b3c:	85 37       	cpi	r24, 0x75	; 117
     b3e:	31 f4       	brne	.+12     	; 0xb4c <vfprintf+0x248>
     b40:	23 2d       	mov	r18, r3
     b42:	2f 7e       	andi	r18, 0xEF	; 239
     b44:	b2 2e       	mov	r11, r18
     b46:	2a e0       	ldi	r18, 0x0A	; 10
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	25 c0       	rjmp	.+74     	; 0xb96 <vfprintf+0x292>
     b4c:	93 2d       	mov	r25, r3
     b4e:	99 7f       	andi	r25, 0xF9	; 249
     b50:	b9 2e       	mov	r11, r25
     b52:	8f 36       	cpi	r24, 0x6F	; 111
     b54:	c1 f0       	breq	.+48     	; 0xb86 <vfprintf+0x282>
     b56:	18 f4       	brcc	.+6      	; 0xb5e <vfprintf+0x25a>
     b58:	88 35       	cpi	r24, 0x58	; 88
     b5a:	79 f0       	breq	.+30     	; 0xb7a <vfprintf+0x276>
     b5c:	ae c0       	rjmp	.+348    	; 0xcba <vfprintf+0x3b6>
     b5e:	80 37       	cpi	r24, 0x70	; 112
     b60:	19 f0       	breq	.+6      	; 0xb68 <vfprintf+0x264>
     b62:	88 37       	cpi	r24, 0x78	; 120
     b64:	21 f0       	breq	.+8      	; 0xb6e <vfprintf+0x26a>
     b66:	a9 c0       	rjmp	.+338    	; 0xcba <vfprintf+0x3b6>
     b68:	e9 2f       	mov	r30, r25
     b6a:	e0 61       	ori	r30, 0x10	; 16
     b6c:	be 2e       	mov	r11, r30
     b6e:	b4 fe       	sbrs	r11, 4
     b70:	0d c0       	rjmp	.+26     	; 0xb8c <vfprintf+0x288>
     b72:	fb 2d       	mov	r31, r11
     b74:	f4 60       	ori	r31, 0x04	; 4
     b76:	bf 2e       	mov	r11, r31
     b78:	09 c0       	rjmp	.+18     	; 0xb8c <vfprintf+0x288>
     b7a:	34 fe       	sbrs	r3, 4
     b7c:	0a c0       	rjmp	.+20     	; 0xb92 <vfprintf+0x28e>
     b7e:	29 2f       	mov	r18, r25
     b80:	26 60       	ori	r18, 0x06	; 6
     b82:	b2 2e       	mov	r11, r18
     b84:	06 c0       	rjmp	.+12     	; 0xb92 <vfprintf+0x28e>
     b86:	28 e0       	ldi	r18, 0x08	; 8
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	05 c0       	rjmp	.+10     	; 0xb96 <vfprintf+0x292>
     b8c:	20 e1       	ldi	r18, 0x10	; 16
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <vfprintf+0x292>
     b92:	20 e1       	ldi	r18, 0x10	; 16
     b94:	32 e0       	ldi	r19, 0x02	; 2
     b96:	f8 01       	movw	r30, r16
     b98:	b7 fe       	sbrs	r11, 7
     b9a:	07 c0       	rjmp	.+14     	; 0xbaa <vfprintf+0x2a6>
     b9c:	60 81       	ld	r22, Z
     b9e:	71 81       	ldd	r23, Z+1	; 0x01
     ba0:	82 81       	ldd	r24, Z+2	; 0x02
     ba2:	93 81       	ldd	r25, Z+3	; 0x03
     ba4:	0c 5f       	subi	r16, 0xFC	; 252
     ba6:	1f 4f       	sbci	r17, 0xFF	; 255
     ba8:	06 c0       	rjmp	.+12     	; 0xbb6 <vfprintf+0x2b2>
     baa:	60 81       	ld	r22, Z
     bac:	71 81       	ldd	r23, Z+1	; 0x01
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 5f       	subi	r16, 0xFE	; 254
     bb4:	1f 4f       	sbci	r17, 0xFF	; 255
     bb6:	a3 01       	movw	r20, r6
     bb8:	5d d5       	rcall	.+2746   	; 0x1674 <__ultoa_invert>
     bba:	88 2e       	mov	r8, r24
     bbc:	86 18       	sub	r8, r6
     bbe:	fb 2d       	mov	r31, r11
     bc0:	ff 77       	andi	r31, 0x7F	; 127
     bc2:	3f 2e       	mov	r3, r31
     bc4:	36 fe       	sbrs	r3, 6
     bc6:	0d c0       	rjmp	.+26     	; 0xbe2 <vfprintf+0x2de>
     bc8:	23 2d       	mov	r18, r3
     bca:	2e 7f       	andi	r18, 0xFE	; 254
     bcc:	a2 2e       	mov	r10, r18
     bce:	89 14       	cp	r8, r9
     bd0:	58 f4       	brcc	.+22     	; 0xbe8 <vfprintf+0x2e4>
     bd2:	34 fe       	sbrs	r3, 4
     bd4:	0b c0       	rjmp	.+22     	; 0xbec <vfprintf+0x2e8>
     bd6:	32 fc       	sbrc	r3, 2
     bd8:	09 c0       	rjmp	.+18     	; 0xbec <vfprintf+0x2e8>
     bda:	83 2d       	mov	r24, r3
     bdc:	8e 7e       	andi	r24, 0xEE	; 238
     bde:	a8 2e       	mov	r10, r24
     be0:	05 c0       	rjmp	.+10     	; 0xbec <vfprintf+0x2e8>
     be2:	b8 2c       	mov	r11, r8
     be4:	a3 2c       	mov	r10, r3
     be6:	03 c0       	rjmp	.+6      	; 0xbee <vfprintf+0x2ea>
     be8:	b8 2c       	mov	r11, r8
     bea:	01 c0       	rjmp	.+2      	; 0xbee <vfprintf+0x2ea>
     bec:	b9 2c       	mov	r11, r9
     bee:	a4 fe       	sbrs	r10, 4
     bf0:	0f c0       	rjmp	.+30     	; 0xc10 <vfprintf+0x30c>
     bf2:	fe 01       	movw	r30, r28
     bf4:	e8 0d       	add	r30, r8
     bf6:	f1 1d       	adc	r31, r1
     bf8:	80 81       	ld	r24, Z
     bfa:	80 33       	cpi	r24, 0x30	; 48
     bfc:	21 f4       	brne	.+8      	; 0xc06 <vfprintf+0x302>
     bfe:	9a 2d       	mov	r25, r10
     c00:	99 7e       	andi	r25, 0xE9	; 233
     c02:	a9 2e       	mov	r10, r25
     c04:	09 c0       	rjmp	.+18     	; 0xc18 <vfprintf+0x314>
     c06:	a2 fe       	sbrs	r10, 2
     c08:	06 c0       	rjmp	.+12     	; 0xc16 <vfprintf+0x312>
     c0a:	b3 94       	inc	r11
     c0c:	b3 94       	inc	r11
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <vfprintf+0x314>
     c10:	8a 2d       	mov	r24, r10
     c12:	86 78       	andi	r24, 0x86	; 134
     c14:	09 f0       	breq	.+2      	; 0xc18 <vfprintf+0x314>
     c16:	b3 94       	inc	r11
     c18:	a3 fc       	sbrc	r10, 3
     c1a:	10 c0       	rjmp	.+32     	; 0xc3c <vfprintf+0x338>
     c1c:	a0 fe       	sbrs	r10, 0
     c1e:	06 c0       	rjmp	.+12     	; 0xc2c <vfprintf+0x328>
     c20:	b2 14       	cp	r11, r2
     c22:	80 f4       	brcc	.+32     	; 0xc44 <vfprintf+0x340>
     c24:	28 0c       	add	r2, r8
     c26:	92 2c       	mov	r9, r2
     c28:	9b 18       	sub	r9, r11
     c2a:	0d c0       	rjmp	.+26     	; 0xc46 <vfprintf+0x342>
     c2c:	b2 14       	cp	r11, r2
     c2e:	58 f4       	brcc	.+22     	; 0xc46 <vfprintf+0x342>
     c30:	b6 01       	movw	r22, r12
     c32:	80 e2       	ldi	r24, 0x20	; 32
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	c9 d4       	rcall	.+2450   	; 0x15ca <fputc>
     c38:	b3 94       	inc	r11
     c3a:	f8 cf       	rjmp	.-16     	; 0xc2c <vfprintf+0x328>
     c3c:	b2 14       	cp	r11, r2
     c3e:	18 f4       	brcc	.+6      	; 0xc46 <vfprintf+0x342>
     c40:	2b 18       	sub	r2, r11
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <vfprintf+0x344>
     c44:	98 2c       	mov	r9, r8
     c46:	21 2c       	mov	r2, r1
     c48:	a4 fe       	sbrs	r10, 4
     c4a:	0f c0       	rjmp	.+30     	; 0xc6a <vfprintf+0x366>
     c4c:	b6 01       	movw	r22, r12
     c4e:	80 e3       	ldi	r24, 0x30	; 48
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	bb d4       	rcall	.+2422   	; 0x15ca <fputc>
     c54:	a2 fe       	sbrs	r10, 2
     c56:	16 c0       	rjmp	.+44     	; 0xc84 <vfprintf+0x380>
     c58:	a1 fc       	sbrc	r10, 1
     c5a:	03 c0       	rjmp	.+6      	; 0xc62 <vfprintf+0x35e>
     c5c:	88 e7       	ldi	r24, 0x78	; 120
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	02 c0       	rjmp	.+4      	; 0xc66 <vfprintf+0x362>
     c62:	88 e5       	ldi	r24, 0x58	; 88
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	b6 01       	movw	r22, r12
     c68:	0c c0       	rjmp	.+24     	; 0xc82 <vfprintf+0x37e>
     c6a:	8a 2d       	mov	r24, r10
     c6c:	86 78       	andi	r24, 0x86	; 134
     c6e:	51 f0       	breq	.+20     	; 0xc84 <vfprintf+0x380>
     c70:	a1 fe       	sbrs	r10, 1
     c72:	02 c0       	rjmp	.+4      	; 0xc78 <vfprintf+0x374>
     c74:	8b e2       	ldi	r24, 0x2B	; 43
     c76:	01 c0       	rjmp	.+2      	; 0xc7a <vfprintf+0x376>
     c78:	80 e2       	ldi	r24, 0x20	; 32
     c7a:	a7 fc       	sbrc	r10, 7
     c7c:	8d e2       	ldi	r24, 0x2D	; 45
     c7e:	b6 01       	movw	r22, r12
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	a3 d4       	rcall	.+2374   	; 0x15ca <fputc>
     c84:	89 14       	cp	r8, r9
     c86:	30 f4       	brcc	.+12     	; 0xc94 <vfprintf+0x390>
     c88:	b6 01       	movw	r22, r12
     c8a:	80 e3       	ldi	r24, 0x30	; 48
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	9d d4       	rcall	.+2362   	; 0x15ca <fputc>
     c90:	9a 94       	dec	r9
     c92:	f8 cf       	rjmp	.-16     	; 0xc84 <vfprintf+0x380>
     c94:	8a 94       	dec	r8
     c96:	f3 01       	movw	r30, r6
     c98:	e8 0d       	add	r30, r8
     c9a:	f1 1d       	adc	r31, r1
     c9c:	80 81       	ld	r24, Z
     c9e:	b6 01       	movw	r22, r12
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	93 d4       	rcall	.+2342   	; 0x15ca <fputc>
     ca4:	81 10       	cpse	r8, r1
     ca6:	f6 cf       	rjmp	.-20     	; 0xc94 <vfprintf+0x390>
     ca8:	22 20       	and	r2, r2
     caa:	09 f4       	brne	.+2      	; 0xcae <vfprintf+0x3aa>
     cac:	4e ce       	rjmp	.-868    	; 0x94a <vfprintf+0x46>
     cae:	b6 01       	movw	r22, r12
     cb0:	80 e2       	ldi	r24, 0x20	; 32
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	8a d4       	rcall	.+2324   	; 0x15ca <fputc>
     cb6:	2a 94       	dec	r2
     cb8:	f7 cf       	rjmp	.-18     	; 0xca8 <vfprintf+0x3a4>
     cba:	f6 01       	movw	r30, r12
     cbc:	86 81       	ldd	r24, Z+6	; 0x06
     cbe:	97 81       	ldd	r25, Z+7	; 0x07
     cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <vfprintf+0x3c2>
     cc2:	8f ef       	ldi	r24, 0xFF	; 255
     cc4:	9f ef       	ldi	r25, 0xFF	; 255
     cc6:	2b 96       	adiw	r28, 0x0b	; 11
     cc8:	cd bf       	out	0x3d, r28	; 61
     cca:	de bf       	out	0x3e, r29	; 62
     ccc:	df 91       	pop	r29
     cce:	cf 91       	pop	r28
     cd0:	1f 91       	pop	r17
     cd2:	0f 91       	pop	r16
     cd4:	ff 90       	pop	r15
     cd6:	ef 90       	pop	r14
     cd8:	df 90       	pop	r13
     cda:	cf 90       	pop	r12
     cdc:	bf 90       	pop	r11
     cde:	af 90       	pop	r10
     ce0:	9f 90       	pop	r9
     ce2:	8f 90       	pop	r8
     ce4:	7f 90       	pop	r7
     ce6:	6f 90       	pop	r6
     ce8:	5f 90       	pop	r5
     cea:	4f 90       	pop	r4
     cec:	3f 90       	pop	r3
     cee:	2f 90       	pop	r2
     cf0:	08 95       	ret

00000cf2 <putval>:
     cf2:	20 fd       	sbrc	r18, 0
     cf4:	09 c0       	rjmp	.+18     	; 0xd08 <putval+0x16>
     cf6:	fc 01       	movw	r30, r24
     cf8:	23 fd       	sbrc	r18, 3
     cfa:	05 c0       	rjmp	.+10     	; 0xd06 <putval+0x14>
     cfc:	22 ff       	sbrs	r18, 2
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <putval+0x12>
     d00:	73 83       	std	Z+3, r23	; 0x03
     d02:	62 83       	std	Z+2, r22	; 0x02
     d04:	51 83       	std	Z+1, r21	; 0x01
     d06:	40 83       	st	Z, r20
     d08:	08 95       	ret

00000d0a <mulacc>:
     d0a:	44 fd       	sbrc	r20, 4
     d0c:	17 c0       	rjmp	.+46     	; 0xd3c <mulacc+0x32>
     d0e:	46 fd       	sbrc	r20, 6
     d10:	17 c0       	rjmp	.+46     	; 0xd40 <mulacc+0x36>
     d12:	ab 01       	movw	r20, r22
     d14:	bc 01       	movw	r22, r24
     d16:	da 01       	movw	r26, r20
     d18:	fb 01       	movw	r30, r22
     d1a:	aa 0f       	add	r26, r26
     d1c:	bb 1f       	adc	r27, r27
     d1e:	ee 1f       	adc	r30, r30
     d20:	ff 1f       	adc	r31, r31
     d22:	10 94       	com	r1
     d24:	d1 f7       	brne	.-12     	; 0xd1a <mulacc+0x10>
     d26:	4a 0f       	add	r20, r26
     d28:	5b 1f       	adc	r21, r27
     d2a:	6e 1f       	adc	r22, r30
     d2c:	7f 1f       	adc	r23, r31
     d2e:	cb 01       	movw	r24, r22
     d30:	ba 01       	movw	r22, r20
     d32:	66 0f       	add	r22, r22
     d34:	77 1f       	adc	r23, r23
     d36:	88 1f       	adc	r24, r24
     d38:	99 1f       	adc	r25, r25
     d3a:	09 c0       	rjmp	.+18     	; 0xd4e <mulacc+0x44>
     d3c:	33 e0       	ldi	r19, 0x03	; 3
     d3e:	01 c0       	rjmp	.+2      	; 0xd42 <mulacc+0x38>
     d40:	34 e0       	ldi	r19, 0x04	; 4
     d42:	66 0f       	add	r22, r22
     d44:	77 1f       	adc	r23, r23
     d46:	88 1f       	adc	r24, r24
     d48:	99 1f       	adc	r25, r25
     d4a:	31 50       	subi	r19, 0x01	; 1
     d4c:	d1 f7       	brne	.-12     	; 0xd42 <mulacc+0x38>
     d4e:	62 0f       	add	r22, r18
     d50:	71 1d       	adc	r23, r1
     d52:	81 1d       	adc	r24, r1
     d54:	91 1d       	adc	r25, r1
     d56:	08 95       	ret

00000d58 <skip_spaces>:
     d58:	0f 93       	push	r16
     d5a:	1f 93       	push	r17
     d5c:	cf 93       	push	r28
     d5e:	df 93       	push	r29
     d60:	8c 01       	movw	r16, r24
     d62:	c8 01       	movw	r24, r16
     d64:	f4 d3       	rcall	.+2024   	; 0x154e <fgetc>
     d66:	ec 01       	movw	r28, r24
     d68:	97 fd       	sbrc	r25, 7
     d6a:	06 c0       	rjmp	.+12     	; 0xd78 <skip_spaces+0x20>
     d6c:	c0 d3       	rcall	.+1920   	; 0x14ee <isspace>
     d6e:	89 2b       	or	r24, r25
     d70:	c1 f7       	brne	.-16     	; 0xd62 <skip_spaces+0xa>
     d72:	b8 01       	movw	r22, r16
     d74:	ce 01       	movw	r24, r28
     d76:	65 d4       	rcall	.+2250   	; 0x1642 <ungetc>
     d78:	ce 01       	movw	r24, r28
     d7a:	df 91       	pop	r29
     d7c:	cf 91       	pop	r28
     d7e:	1f 91       	pop	r17
     d80:	0f 91       	pop	r16
     d82:	08 95       	ret

00000d84 <conv_int>:
     d84:	8f 92       	push	r8
     d86:	9f 92       	push	r9
     d88:	af 92       	push	r10
     d8a:	bf 92       	push	r11
     d8c:	ef 92       	push	r14
     d8e:	ff 92       	push	r15
     d90:	0f 93       	push	r16
     d92:	1f 93       	push	r17
     d94:	cf 93       	push	r28
     d96:	df 93       	push	r29
     d98:	8c 01       	movw	r16, r24
     d9a:	d6 2f       	mov	r29, r22
     d9c:	7a 01       	movw	r14, r20
     d9e:	b2 2e       	mov	r11, r18
     da0:	d6 d3       	rcall	.+1964   	; 0x154e <fgetc>
     da2:	9c 01       	movw	r18, r24
     da4:	33 27       	eor	r19, r19
     da6:	2b 32       	cpi	r18, 0x2B	; 43
     da8:	31 05       	cpc	r19, r1
     daa:	31 f0       	breq	.+12     	; 0xdb8 <conv_int+0x34>
     dac:	2d 32       	cpi	r18, 0x2D	; 45
     dae:	31 05       	cpc	r19, r1
     db0:	59 f4       	brne	.+22     	; 0xdc8 <conv_int+0x44>
     db2:	8b 2d       	mov	r24, r11
     db4:	80 68       	ori	r24, 0x80	; 128
     db6:	b8 2e       	mov	r11, r24
     db8:	d1 50       	subi	r29, 0x01	; 1
     dba:	11 f4       	brne	.+4      	; 0xdc0 <conv_int+0x3c>
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	61 c0       	rjmp	.+194    	; 0xe82 <conv_int+0xfe>
     dc0:	c8 01       	movw	r24, r16
     dc2:	c5 d3       	rcall	.+1930   	; 0x154e <fgetc>
     dc4:	97 fd       	sbrc	r25, 7
     dc6:	fa cf       	rjmp	.-12     	; 0xdbc <conv_int+0x38>
     dc8:	cb 2d       	mov	r28, r11
     dca:	cd 7f       	andi	r28, 0xFD	; 253
     dcc:	2b 2d       	mov	r18, r11
     dce:	20 73       	andi	r18, 0x30	; 48
     dd0:	f9 f4       	brne	.+62     	; 0xe10 <conv_int+0x8c>
     dd2:	80 33       	cpi	r24, 0x30	; 48
     dd4:	e9 f4       	brne	.+58     	; 0xe10 <conv_int+0x8c>
     dd6:	aa 24       	eor	r10, r10
     dd8:	aa 94       	dec	r10
     dda:	ad 0e       	add	r10, r29
     ddc:	09 f4       	brne	.+2      	; 0xde0 <conv_int+0x5c>
     dde:	3e c0       	rjmp	.+124    	; 0xe5c <conv_int+0xd8>
     de0:	c8 01       	movw	r24, r16
     de2:	b5 d3       	rcall	.+1898   	; 0x154e <fgetc>
     de4:	97 fd       	sbrc	r25, 7
     de6:	3a c0       	rjmp	.+116    	; 0xe5c <conv_int+0xd8>
     de8:	9c 01       	movw	r18, r24
     dea:	2f 7d       	andi	r18, 0xDF	; 223
     dec:	33 27       	eor	r19, r19
     dee:	28 35       	cpi	r18, 0x58	; 88
     df0:	31 05       	cpc	r19, r1
     df2:	41 f4       	brne	.+16     	; 0xe04 <conv_int+0x80>
     df4:	c2 64       	ori	r28, 0x42	; 66
     df6:	d2 50       	subi	r29, 0x02	; 2
     df8:	89 f1       	breq	.+98     	; 0xe5c <conv_int+0xd8>
     dfa:	c8 01       	movw	r24, r16
     dfc:	a8 d3       	rcall	.+1872   	; 0x154e <fgetc>
     dfe:	97 ff       	sbrs	r25, 7
     e00:	07 c0       	rjmp	.+14     	; 0xe10 <conv_int+0x8c>
     e02:	2c c0       	rjmp	.+88     	; 0xe5c <conv_int+0xd8>
     e04:	b6 fe       	sbrs	r11, 6
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <conv_int+0x88>
     e08:	c2 60       	ori	r28, 0x02	; 2
     e0a:	01 c0       	rjmp	.+2      	; 0xe0e <conv_int+0x8a>
     e0c:	c2 61       	ori	r28, 0x12	; 18
     e0e:	da 2d       	mov	r29, r10
     e10:	81 2c       	mov	r8, r1
     e12:	91 2c       	mov	r9, r1
     e14:	54 01       	movw	r10, r8
     e16:	20 ed       	ldi	r18, 0xD0	; 208
     e18:	28 0f       	add	r18, r24
     e1a:	28 30       	cpi	r18, 0x08	; 8
     e1c:	78 f0       	brcs	.+30     	; 0xe3c <conv_int+0xb8>
     e1e:	c4 ff       	sbrs	r28, 4
     e20:	03 c0       	rjmp	.+6      	; 0xe28 <conv_int+0xa4>
     e22:	b8 01       	movw	r22, r16
     e24:	0e d4       	rcall	.+2076   	; 0x1642 <ungetc>
     e26:	17 c0       	rjmp	.+46     	; 0xe56 <conv_int+0xd2>
     e28:	2a 30       	cpi	r18, 0x0A	; 10
     e2a:	40 f0       	brcs	.+16     	; 0xe3c <conv_int+0xb8>
     e2c:	c6 ff       	sbrs	r28, 6
     e2e:	f9 cf       	rjmp	.-14     	; 0xe22 <conv_int+0x9e>
     e30:	2f 7d       	andi	r18, 0xDF	; 223
     e32:	3f ee       	ldi	r19, 0xEF	; 239
     e34:	32 0f       	add	r19, r18
     e36:	36 30       	cpi	r19, 0x06	; 6
     e38:	a0 f7       	brcc	.-24     	; 0xe22 <conv_int+0x9e>
     e3a:	27 50       	subi	r18, 0x07	; 7
     e3c:	4c 2f       	mov	r20, r28
     e3e:	c5 01       	movw	r24, r10
     e40:	b4 01       	movw	r22, r8
     e42:	63 df       	rcall	.-314    	; 0xd0a <mulacc>
     e44:	4b 01       	movw	r8, r22
     e46:	5c 01       	movw	r10, r24
     e48:	c2 60       	ori	r28, 0x02	; 2
     e4a:	d1 50       	subi	r29, 0x01	; 1
     e4c:	51 f0       	breq	.+20     	; 0xe62 <conv_int+0xde>
     e4e:	c8 01       	movw	r24, r16
     e50:	7e d3       	rcall	.+1788   	; 0x154e <fgetc>
     e52:	97 ff       	sbrs	r25, 7
     e54:	e0 cf       	rjmp	.-64     	; 0xe16 <conv_int+0x92>
     e56:	c1 fd       	sbrc	r28, 1
     e58:	04 c0       	rjmp	.+8      	; 0xe62 <conv_int+0xde>
     e5a:	b0 cf       	rjmp	.-160    	; 0xdbc <conv_int+0x38>
     e5c:	81 2c       	mov	r8, r1
     e5e:	91 2c       	mov	r9, r1
     e60:	54 01       	movw	r10, r8
     e62:	c7 ff       	sbrs	r28, 7
     e64:	08 c0       	rjmp	.+16     	; 0xe76 <conv_int+0xf2>
     e66:	b0 94       	com	r11
     e68:	a0 94       	com	r10
     e6a:	90 94       	com	r9
     e6c:	80 94       	com	r8
     e6e:	81 1c       	adc	r8, r1
     e70:	91 1c       	adc	r9, r1
     e72:	a1 1c       	adc	r10, r1
     e74:	b1 1c       	adc	r11, r1
     e76:	2c 2f       	mov	r18, r28
     e78:	b5 01       	movw	r22, r10
     e7a:	a4 01       	movw	r20, r8
     e7c:	c7 01       	movw	r24, r14
     e7e:	39 df       	rcall	.-398    	; 0xcf2 <putval>
     e80:	81 e0       	ldi	r24, 0x01	; 1
     e82:	df 91       	pop	r29
     e84:	cf 91       	pop	r28
     e86:	1f 91       	pop	r17
     e88:	0f 91       	pop	r16
     e8a:	ff 90       	pop	r15
     e8c:	ef 90       	pop	r14
     e8e:	bf 90       	pop	r11
     e90:	af 90       	pop	r10
     e92:	9f 90       	pop	r9
     e94:	8f 90       	pop	r8
     e96:	08 95       	ret

00000e98 <conv_brk>:
     e98:	5f 92       	push	r5
     e9a:	6f 92       	push	r6
     e9c:	7f 92       	push	r7
     e9e:	8f 92       	push	r8
     ea0:	9f 92       	push	r9
     ea2:	af 92       	push	r10
     ea4:	bf 92       	push	r11
     ea6:	cf 92       	push	r12
     ea8:	df 92       	push	r13
     eaa:	ef 92       	push	r14
     eac:	ff 92       	push	r15
     eae:	0f 93       	push	r16
     eb0:	1f 93       	push	r17
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
     eb6:	cd b7       	in	r28, 0x3d	; 61
     eb8:	de b7       	in	r29, 0x3e	; 62
     eba:	a0 97       	sbiw	r28, 0x20	; 32
     ebc:	cd bf       	out	0x3d, r28	; 61
     ebe:	de bf       	out	0x3e, r29	; 62
     ec0:	5c 01       	movw	r10, r24
     ec2:	96 2e       	mov	r9, r22
     ec4:	7a 01       	movw	r14, r20
     ec6:	f9 01       	movw	r30, r18
     ec8:	8e 01       	movw	r16, r28
     eca:	0f 5f       	subi	r16, 0xFF	; 255
     ecc:	1f 4f       	sbci	r17, 0xFF	; 255
     ece:	68 01       	movw	r12, r16
     ed0:	80 e2       	ldi	r24, 0x20	; 32
     ed2:	d8 01       	movw	r26, r16
     ed4:	1d 92       	st	X+, r1
     ed6:	8a 95       	dec	r24
     ed8:	e9 f7       	brne	.-6      	; 0xed4 <conv_brk+0x3c>
     eda:	d5 01       	movw	r26, r10
     edc:	13 96       	adiw	r26, 0x03	; 3
     ede:	8c 90       	ld	r8, X
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	61 2c       	mov	r6, r1
     ee6:	71 2c       	mov	r7, r1
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	61 e0       	ldi	r22, 0x01	; 1
     eec:	70 e0       	ldi	r23, 0x00	; 0
     eee:	83 fc       	sbrc	r8, 3
     ef0:	25 91       	lpm	r18, Z+
     ef2:	83 fe       	sbrs	r8, 3
     ef4:	21 91       	ld	r18, Z+
     ef6:	8f 01       	movw	r16, r30
     ef8:	52 2e       	mov	r5, r18
     efa:	21 11       	cpse	r18, r1
     efc:	03 c0       	rjmp	.+6      	; 0xf04 <conv_brk+0x6c>
     efe:	80 e0       	ldi	r24, 0x00	; 0
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	90 c0       	rjmp	.+288    	; 0x1024 <conv_brk+0x18c>
     f04:	2e 35       	cpi	r18, 0x5E	; 94
     f06:	11 f4       	brne	.+4      	; 0xf0c <conv_brk+0x74>
     f08:	00 97       	sbiw	r24, 0x00	; 0
     f0a:	51 f1       	breq	.+84     	; 0xf60 <conv_brk+0xc8>
     f0c:	43 2f       	mov	r20, r19
     f0e:	50 e0       	ldi	r21, 0x00	; 0
     f10:	48 17       	cp	r20, r24
     f12:	59 07       	cpc	r21, r25
     f14:	3c f4       	brge	.+14     	; 0xf24 <conv_brk+0x8c>
     f16:	2d 35       	cpi	r18, 0x5D	; 93
     f18:	59 f1       	breq	.+86     	; 0xf70 <conv_brk+0xd8>
     f1a:	2d 32       	cpi	r18, 0x2D	; 45
     f1c:	19 f4       	brne	.+6      	; 0xf24 <conv_brk+0x8c>
     f1e:	77 20       	and	r7, r7
     f20:	09 f1       	breq	.+66     	; 0xf64 <conv_brk+0xcc>
     f22:	03 c0       	rjmp	.+6      	; 0xf2a <conv_brk+0x92>
     f24:	77 20       	and	r7, r7
     f26:	09 f4       	brne	.+2      	; 0xf2a <conv_brk+0x92>
     f28:	68 c0       	rjmp	.+208    	; 0xffa <conv_brk+0x162>
     f2a:	45 2d       	mov	r20, r5
     f2c:	46 95       	lsr	r20
     f2e:	46 95       	lsr	r20
     f30:	46 95       	lsr	r20
     f32:	d6 01       	movw	r26, r12
     f34:	a4 0f       	add	r26, r20
     f36:	b1 1d       	adc	r27, r1
     f38:	45 2d       	mov	r20, r5
     f3a:	47 70       	andi	r20, 0x07	; 7
     f3c:	8b 01       	movw	r16, r22
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <conv_brk+0xac>
     f40:	00 0f       	add	r16, r16
     f42:	11 1f       	adc	r17, r17
     f44:	4a 95       	dec	r20
     f46:	e2 f7       	brpl	.-8      	; 0xf40 <conv_brk+0xa8>
     f48:	a8 01       	movw	r20, r16
     f4a:	5c 91       	ld	r21, X
     f4c:	45 2b       	or	r20, r21
     f4e:	4c 93       	st	X, r20
     f50:	65 14       	cp	r6, r5
     f52:	59 f0       	breq	.+22     	; 0xf6a <conv_brk+0xd2>
     f54:	56 14       	cp	r5, r6
     f56:	10 f4       	brcc	.+4      	; 0xf5c <conv_brk+0xc4>
     f58:	53 94       	inc	r5
     f5a:	e7 cf       	rjmp	.-50     	; 0xf2a <conv_brk+0x92>
     f5c:	5a 94       	dec	r5
     f5e:	e5 cf       	rjmp	.-54     	; 0xf2a <conv_brk+0x92>
     f60:	31 e0       	ldi	r19, 0x01	; 1
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <conv_brk+0xd4>
     f64:	77 24       	eor	r7, r7
     f66:	73 94       	inc	r7
     f68:	01 c0       	rjmp	.+2      	; 0xf6c <conv_brk+0xd4>
     f6a:	71 2c       	mov	r7, r1
     f6c:	01 96       	adiw	r24, 0x01	; 1
     f6e:	bf cf       	rjmp	.-130    	; 0xeee <conv_brk+0x56>
     f70:	77 20       	and	r7, r7
     f72:	19 f0       	breq	.+6      	; 0xf7a <conv_brk+0xe2>
     f74:	8e 81       	ldd	r24, Y+6	; 0x06
     f76:	80 62       	ori	r24, 0x20	; 32
     f78:	8e 83       	std	Y+6, r24	; 0x06
     f7a:	31 11       	cpse	r19, r1
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <conv_brk+0xec>
     f7e:	88 24       	eor	r8, r8
     f80:	83 94       	inc	r8
     f82:	17 c0       	rjmp	.+46     	; 0xfb2 <conv_brk+0x11a>
     f84:	f6 01       	movw	r30, r12
     f86:	9e 01       	movw	r18, r28
     f88:	2f 5d       	subi	r18, 0xDF	; 223
     f8a:	3f 4f       	sbci	r19, 0xFF	; 255
     f8c:	80 81       	ld	r24, Z
     f8e:	80 95       	com	r24
     f90:	81 93       	st	Z+, r24
     f92:	2e 17       	cp	r18, r30
     f94:	3f 07       	cpc	r19, r31
     f96:	d1 f7       	brne	.-12     	; 0xf8c <conv_brk+0xf4>
     f98:	f2 cf       	rjmp	.-28     	; 0xf7e <conv_brk+0xe6>
     f9a:	e1 14       	cp	r14, r1
     f9c:	f1 04       	cpc	r15, r1
     f9e:	29 f0       	breq	.+10     	; 0xfaa <conv_brk+0x112>
     fa0:	d7 01       	movw	r26, r14
     fa2:	8c 93       	st	X, r24
     fa4:	f7 01       	movw	r30, r14
     fa6:	31 96       	adiw	r30, 0x01	; 1
     fa8:	7f 01       	movw	r14, r30
     faa:	9a 94       	dec	r9
     fac:	81 2c       	mov	r8, r1
     fae:	99 20       	and	r9, r9
     fb0:	e9 f0       	breq	.+58     	; 0xfec <conv_brk+0x154>
     fb2:	c5 01       	movw	r24, r10
     fb4:	cc d2       	rcall	.+1432   	; 0x154e <fgetc>
     fb6:	97 fd       	sbrc	r25, 7
     fb8:	17 c0       	rjmp	.+46     	; 0xfe8 <conv_brk+0x150>
     fba:	fc 01       	movw	r30, r24
     fbc:	ff 27       	eor	r31, r31
     fbe:	23 e0       	ldi	r18, 0x03	; 3
     fc0:	f5 95       	asr	r31
     fc2:	e7 95       	ror	r30
     fc4:	2a 95       	dec	r18
     fc6:	e1 f7       	brne	.-8      	; 0xfc0 <conv_brk+0x128>
     fc8:	ec 0d       	add	r30, r12
     fca:	fd 1d       	adc	r31, r13
     fcc:	20 81       	ld	r18, Z
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	ac 01       	movw	r20, r24
     fd2:	47 70       	andi	r20, 0x07	; 7
     fd4:	55 27       	eor	r21, r21
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <conv_brk+0x144>
     fd8:	35 95       	asr	r19
     fda:	27 95       	ror	r18
     fdc:	4a 95       	dec	r20
     fde:	e2 f7       	brpl	.-8      	; 0xfd8 <conv_brk+0x140>
     fe0:	20 fd       	sbrc	r18, 0
     fe2:	db cf       	rjmp	.-74     	; 0xf9a <conv_brk+0x102>
     fe4:	b5 01       	movw	r22, r10
     fe6:	2d d3       	rcall	.+1626   	; 0x1642 <ungetc>
     fe8:	81 10       	cpse	r8, r1
     fea:	89 cf       	rjmp	.-238    	; 0xefe <conv_brk+0x66>
     fec:	e1 14       	cp	r14, r1
     fee:	f1 04       	cpc	r15, r1
     ff0:	11 f0       	breq	.+4      	; 0xff6 <conv_brk+0x15e>
     ff2:	d7 01       	movw	r26, r14
     ff4:	1c 92       	st	X, r1
     ff6:	c8 01       	movw	r24, r16
     ff8:	15 c0       	rjmp	.+42     	; 0x1024 <conv_brk+0x18c>
     ffa:	42 2f       	mov	r20, r18
     ffc:	46 95       	lsr	r20
     ffe:	46 95       	lsr	r20
    1000:	46 95       	lsr	r20
    1002:	d6 01       	movw	r26, r12
    1004:	a4 0f       	add	r26, r20
    1006:	b1 1d       	adc	r27, r1
    1008:	42 2f       	mov	r20, r18
    100a:	47 70       	andi	r20, 0x07	; 7
    100c:	8b 01       	movw	r16, r22
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <conv_brk+0x17c>
    1010:	00 0f       	add	r16, r16
    1012:	11 1f       	adc	r17, r17
    1014:	4a 95       	dec	r20
    1016:	e2 f7       	brpl	.-8      	; 0x1010 <conv_brk+0x178>
    1018:	a8 01       	movw	r20, r16
    101a:	5c 91       	ld	r21, X
    101c:	45 2b       	or	r20, r21
    101e:	4c 93       	st	X, r20
    1020:	62 2e       	mov	r6, r18
    1022:	a4 cf       	rjmp	.-184    	; 0xf6c <conv_brk+0xd4>
    1024:	a0 96       	adiw	r28, 0x20	; 32
    1026:	cd bf       	out	0x3d, r28	; 61
    1028:	de bf       	out	0x3e, r29	; 62
    102a:	df 91       	pop	r29
    102c:	cf 91       	pop	r28
    102e:	1f 91       	pop	r17
    1030:	0f 91       	pop	r16
    1032:	ff 90       	pop	r15
    1034:	ef 90       	pop	r14
    1036:	df 90       	pop	r13
    1038:	cf 90       	pop	r12
    103a:	bf 90       	pop	r11
    103c:	af 90       	pop	r10
    103e:	9f 90       	pop	r9
    1040:	8f 90       	pop	r8
    1042:	7f 90       	pop	r7
    1044:	6f 90       	pop	r6
    1046:	5f 90       	pop	r5
    1048:	08 95       	ret

0000104a <vfscanf>:
    104a:	5f 92       	push	r5
    104c:	6f 92       	push	r6
    104e:	7f 92       	push	r7
    1050:	8f 92       	push	r8
    1052:	9f 92       	push	r9
    1054:	af 92       	push	r10
    1056:	bf 92       	push	r11
    1058:	cf 92       	push	r12
    105a:	df 92       	push	r13
    105c:	ef 92       	push	r14
    105e:	ff 92       	push	r15
    1060:	0f 93       	push	r16
    1062:	1f 93       	push	r17
    1064:	cf 93       	push	r28
    1066:	df 93       	push	r29
    1068:	6c 01       	movw	r12, r24
    106a:	eb 01       	movw	r28, r22
    106c:	5a 01       	movw	r10, r20
    106e:	fc 01       	movw	r30, r24
    1070:	16 82       	std	Z+6, r1	; 0x06
    1072:	17 82       	std	Z+7, r1	; 0x07
    1074:	51 2c       	mov	r5, r1
    1076:	f6 01       	movw	r30, r12
    1078:	e3 80       	ldd	r14, Z+3	; 0x03
    107a:	fe 01       	movw	r30, r28
    107c:	e3 fc       	sbrc	r14, 3
    107e:	85 91       	lpm	r24, Z+
    1080:	e3 fe       	sbrs	r14, 3
    1082:	81 91       	ld	r24, Z+
    1084:	18 2f       	mov	r17, r24
    1086:	ef 01       	movw	r28, r30
    1088:	88 23       	and	r24, r24
    108a:	09 f4       	brne	.+2      	; 0x108e <vfscanf+0x44>
    108c:	e0 c0       	rjmp	.+448    	; 0x124e <vfscanf+0x204>
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	2e d2       	rcall	.+1116   	; 0x14ee <isspace>
    1092:	89 2b       	or	r24, r25
    1094:	19 f0       	breq	.+6      	; 0x109c <vfscanf+0x52>
    1096:	c6 01       	movw	r24, r12
    1098:	5f de       	rcall	.-834    	; 0xd58 <skip_spaces>
    109a:	ed cf       	rjmp	.-38     	; 0x1076 <vfscanf+0x2c>
    109c:	15 32       	cpi	r17, 0x25	; 37
    109e:	41 f4       	brne	.+16     	; 0x10b0 <vfscanf+0x66>
    10a0:	fe 01       	movw	r30, r28
    10a2:	e3 fc       	sbrc	r14, 3
    10a4:	15 91       	lpm	r17, Z+
    10a6:	e3 fe       	sbrs	r14, 3
    10a8:	11 91       	ld	r17, Z+
    10aa:	ef 01       	movw	r28, r30
    10ac:	15 32       	cpi	r17, 0x25	; 37
    10ae:	71 f4       	brne	.+28     	; 0x10cc <vfscanf+0x82>
    10b0:	c6 01       	movw	r24, r12
    10b2:	4d d2       	rcall	.+1178   	; 0x154e <fgetc>
    10b4:	97 fd       	sbrc	r25, 7
    10b6:	c9 c0       	rjmp	.+402    	; 0x124a <vfscanf+0x200>
    10b8:	41 2f       	mov	r20, r17
    10ba:	50 e0       	ldi	r21, 0x00	; 0
    10bc:	9c 01       	movw	r18, r24
    10be:	33 27       	eor	r19, r19
    10c0:	24 17       	cp	r18, r20
    10c2:	35 07       	cpc	r19, r21
    10c4:	c1 f2       	breq	.-80     	; 0x1076 <vfscanf+0x2c>
    10c6:	b6 01       	movw	r22, r12
    10c8:	bc d2       	rcall	.+1400   	; 0x1642 <ungetc>
    10ca:	c1 c0       	rjmp	.+386    	; 0x124e <vfscanf+0x204>
    10cc:	1a 32       	cpi	r17, 0x2A	; 42
    10ce:	39 f4       	brne	.+14     	; 0x10de <vfscanf+0x94>
    10d0:	e3 fc       	sbrc	r14, 3
    10d2:	15 91       	lpm	r17, Z+
    10d4:	e3 fe       	sbrs	r14, 3
    10d6:	11 91       	ld	r17, Z+
    10d8:	ef 01       	movw	r28, r30
    10da:	01 e0       	ldi	r16, 0x01	; 1
    10dc:	01 c0       	rjmp	.+2      	; 0x10e0 <vfscanf+0x96>
    10de:	00 e0       	ldi	r16, 0x00	; 0
    10e0:	f1 2c       	mov	r15, r1
    10e2:	20 ed       	ldi	r18, 0xD0	; 208
    10e4:	21 0f       	add	r18, r17
    10e6:	2a 30       	cpi	r18, 0x0A	; 10
    10e8:	78 f4       	brcc	.+30     	; 0x1108 <vfscanf+0xbe>
    10ea:	02 60       	ori	r16, 0x02	; 2
    10ec:	6f 2d       	mov	r22, r15
    10ee:	70 e0       	ldi	r23, 0x00	; 0
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	40 e2       	ldi	r20, 0x20	; 32
    10f6:	09 de       	rcall	.-1006   	; 0xd0a <mulacc>
    10f8:	f6 2e       	mov	r15, r22
    10fa:	fe 01       	movw	r30, r28
    10fc:	e3 fc       	sbrc	r14, 3
    10fe:	15 91       	lpm	r17, Z+
    1100:	e3 fe       	sbrs	r14, 3
    1102:	11 91       	ld	r17, Z+
    1104:	ef 01       	movw	r28, r30
    1106:	ed cf       	rjmp	.-38     	; 0x10e2 <vfscanf+0x98>
    1108:	01 ff       	sbrs	r16, 1
    110a:	03 c0       	rjmp	.+6      	; 0x1112 <vfscanf+0xc8>
    110c:	f1 10       	cpse	r15, r1
    110e:	03 c0       	rjmp	.+6      	; 0x1116 <vfscanf+0xcc>
    1110:	9e c0       	rjmp	.+316    	; 0x124e <vfscanf+0x204>
    1112:	ff 24       	eor	r15, r15
    1114:	fa 94       	dec	r15
    1116:	18 36       	cpi	r17, 0x68	; 104
    1118:	19 f0       	breq	.+6      	; 0x1120 <vfscanf+0xd6>
    111a:	1c 36       	cpi	r17, 0x6C	; 108
    111c:	51 f0       	breq	.+20     	; 0x1132 <vfscanf+0xe8>
    111e:	10 c0       	rjmp	.+32     	; 0x1140 <vfscanf+0xf6>
    1120:	fe 01       	movw	r30, r28
    1122:	e3 fc       	sbrc	r14, 3
    1124:	15 91       	lpm	r17, Z+
    1126:	e3 fe       	sbrs	r14, 3
    1128:	11 91       	ld	r17, Z+
    112a:	ef 01       	movw	r28, r30
    112c:	18 36       	cpi	r17, 0x68	; 104
    112e:	41 f4       	brne	.+16     	; 0x1140 <vfscanf+0xf6>
    1130:	08 60       	ori	r16, 0x08	; 8
    1132:	04 60       	ori	r16, 0x04	; 4
    1134:	fe 01       	movw	r30, r28
    1136:	e3 fc       	sbrc	r14, 3
    1138:	15 91       	lpm	r17, Z+
    113a:	e3 fe       	sbrs	r14, 3
    113c:	11 91       	ld	r17, Z+
    113e:	ef 01       	movw	r28, r30
    1140:	11 23       	and	r17, r17
    1142:	09 f4       	brne	.+2      	; 0x1146 <vfscanf+0xfc>
    1144:	84 c0       	rjmp	.+264    	; 0x124e <vfscanf+0x204>
    1146:	61 2f       	mov	r22, r17
    1148:	70 e0       	ldi	r23, 0x00	; 0
    114a:	8c ef       	ldi	r24, 0xFC	; 252
    114c:	91 e0       	ldi	r25, 0x01	; 1
    114e:	d7 d1       	rcall	.+942    	; 0x14fe <strchr_P>
    1150:	89 2b       	or	r24, r25
    1152:	09 f4       	brne	.+2      	; 0x1156 <vfscanf+0x10c>
    1154:	7c c0       	rjmp	.+248    	; 0x124e <vfscanf+0x204>
    1156:	00 fd       	sbrc	r16, 0
    1158:	07 c0       	rjmp	.+14     	; 0x1168 <vfscanf+0x11e>
    115a:	f5 01       	movw	r30, r10
    115c:	80 80       	ld	r8, Z
    115e:	91 80       	ldd	r9, Z+1	; 0x01
    1160:	c5 01       	movw	r24, r10
    1162:	02 96       	adiw	r24, 0x02	; 2
    1164:	5c 01       	movw	r10, r24
    1166:	02 c0       	rjmp	.+4      	; 0x116c <vfscanf+0x122>
    1168:	81 2c       	mov	r8, r1
    116a:	91 2c       	mov	r9, r1
    116c:	1e 36       	cpi	r17, 0x6E	; 110
    116e:	49 f4       	brne	.+18     	; 0x1182 <vfscanf+0x138>
    1170:	f6 01       	movw	r30, r12
    1172:	46 81       	ldd	r20, Z+6	; 0x06
    1174:	57 81       	ldd	r21, Z+7	; 0x07
    1176:	60 e0       	ldi	r22, 0x00	; 0
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	20 2f       	mov	r18, r16
    117c:	c4 01       	movw	r24, r8
    117e:	b9 dd       	rcall	.-1166   	; 0xcf2 <putval>
    1180:	7a cf       	rjmp	.-268    	; 0x1076 <vfscanf+0x2c>
    1182:	13 36       	cpi	r17, 0x63	; 99
    1184:	a1 f4       	brne	.+40     	; 0x11ae <vfscanf+0x164>
    1186:	01 fd       	sbrc	r16, 1
    1188:	02 c0       	rjmp	.+4      	; 0x118e <vfscanf+0x144>
    118a:	ff 24       	eor	r15, r15
    118c:	f3 94       	inc	r15
    118e:	c6 01       	movw	r24, r12
    1190:	de d1       	rcall	.+956    	; 0x154e <fgetc>
    1192:	97 fd       	sbrc	r25, 7
    1194:	5a c0       	rjmp	.+180    	; 0x124a <vfscanf+0x200>
    1196:	81 14       	cp	r8, r1
    1198:	91 04       	cpc	r9, r1
    119a:	29 f0       	breq	.+10     	; 0x11a6 <vfscanf+0x15c>
    119c:	f4 01       	movw	r30, r8
    119e:	80 83       	st	Z, r24
    11a0:	c4 01       	movw	r24, r8
    11a2:	01 96       	adiw	r24, 0x01	; 1
    11a4:	4c 01       	movw	r8, r24
    11a6:	fa 94       	dec	r15
    11a8:	f1 10       	cpse	r15, r1
    11aa:	f1 cf       	rjmp	.-30     	; 0x118e <vfscanf+0x144>
    11ac:	4a c0       	rjmp	.+148    	; 0x1242 <vfscanf+0x1f8>
    11ae:	1b 35       	cpi	r17, 0x5B	; 91
    11b0:	51 f4       	brne	.+20     	; 0x11c6 <vfscanf+0x17c>
    11b2:	9e 01       	movw	r18, r28
    11b4:	a4 01       	movw	r20, r8
    11b6:	6f 2d       	mov	r22, r15
    11b8:	c6 01       	movw	r24, r12
    11ba:	6e de       	rcall	.-804    	; 0xe98 <conv_brk>
    11bc:	ec 01       	movw	r28, r24
    11be:	89 2b       	or	r24, r25
    11c0:	09 f0       	breq	.+2      	; 0x11c4 <vfscanf+0x17a>
    11c2:	3f c0       	rjmp	.+126    	; 0x1242 <vfscanf+0x1f8>
    11c4:	39 c0       	rjmp	.+114    	; 0x1238 <vfscanf+0x1ee>
    11c6:	c6 01       	movw	r24, r12
    11c8:	c7 dd       	rcall	.-1138   	; 0xd58 <skip_spaces>
    11ca:	97 fd       	sbrc	r25, 7
    11cc:	3e c0       	rjmp	.+124    	; 0x124a <vfscanf+0x200>
    11ce:	1f 36       	cpi	r17, 0x6F	; 111
    11d0:	49 f1       	breq	.+82     	; 0x1224 <vfscanf+0x1da>
    11d2:	28 f4       	brcc	.+10     	; 0x11de <vfscanf+0x194>
    11d4:	14 36       	cpi	r17, 0x64	; 100
    11d6:	21 f1       	breq	.+72     	; 0x1220 <vfscanf+0x1d6>
    11d8:	19 36       	cpi	r17, 0x69	; 105
    11da:	39 f1       	breq	.+78     	; 0x122a <vfscanf+0x1e0>
    11dc:	25 c0       	rjmp	.+74     	; 0x1228 <vfscanf+0x1de>
    11de:	13 37       	cpi	r17, 0x73	; 115
    11e0:	71 f0       	breq	.+28     	; 0x11fe <vfscanf+0x1b4>
    11e2:	15 37       	cpi	r17, 0x75	; 117
    11e4:	e9 f0       	breq	.+58     	; 0x1220 <vfscanf+0x1d6>
    11e6:	20 c0       	rjmp	.+64     	; 0x1228 <vfscanf+0x1de>
    11e8:	81 14       	cp	r8, r1
    11ea:	91 04       	cpc	r9, r1
    11ec:	29 f0       	breq	.+10     	; 0x11f8 <vfscanf+0x1ae>
    11ee:	f4 01       	movw	r30, r8
    11f0:	60 82       	st	Z, r6
    11f2:	c4 01       	movw	r24, r8
    11f4:	01 96       	adiw	r24, 0x01	; 1
    11f6:	4c 01       	movw	r8, r24
    11f8:	fa 94       	dec	r15
    11fa:	ff 20       	and	r15, r15
    11fc:	59 f0       	breq	.+22     	; 0x1214 <vfscanf+0x1ca>
    11fe:	c6 01       	movw	r24, r12
    1200:	a6 d1       	rcall	.+844    	; 0x154e <fgetc>
    1202:	3c 01       	movw	r6, r24
    1204:	97 fd       	sbrc	r25, 7
    1206:	06 c0       	rjmp	.+12     	; 0x1214 <vfscanf+0x1ca>
    1208:	72 d1       	rcall	.+740    	; 0x14ee <isspace>
    120a:	89 2b       	or	r24, r25
    120c:	69 f3       	breq	.-38     	; 0x11e8 <vfscanf+0x19e>
    120e:	b6 01       	movw	r22, r12
    1210:	c3 01       	movw	r24, r6
    1212:	17 d2       	rcall	.+1070   	; 0x1642 <ungetc>
    1214:	81 14       	cp	r8, r1
    1216:	91 04       	cpc	r9, r1
    1218:	a1 f0       	breq	.+40     	; 0x1242 <vfscanf+0x1f8>
    121a:	f4 01       	movw	r30, r8
    121c:	10 82       	st	Z, r1
    121e:	11 c0       	rjmp	.+34     	; 0x1242 <vfscanf+0x1f8>
    1220:	00 62       	ori	r16, 0x20	; 32
    1222:	03 c0       	rjmp	.+6      	; 0x122a <vfscanf+0x1e0>
    1224:	00 61       	ori	r16, 0x10	; 16
    1226:	01 c0       	rjmp	.+2      	; 0x122a <vfscanf+0x1e0>
    1228:	00 64       	ori	r16, 0x40	; 64
    122a:	20 2f       	mov	r18, r16
    122c:	a4 01       	movw	r20, r8
    122e:	6f 2d       	mov	r22, r15
    1230:	c6 01       	movw	r24, r12
    1232:	a8 dd       	rcall	.-1200   	; 0xd84 <conv_int>
    1234:	81 11       	cpse	r24, r1
    1236:	05 c0       	rjmp	.+10     	; 0x1242 <vfscanf+0x1f8>
    1238:	f6 01       	movw	r30, r12
    123a:	83 81       	ldd	r24, Z+3	; 0x03
    123c:	80 73       	andi	r24, 0x30	; 48
    123e:	29 f4       	brne	.+10     	; 0x124a <vfscanf+0x200>
    1240:	06 c0       	rjmp	.+12     	; 0x124e <vfscanf+0x204>
    1242:	00 fd       	sbrc	r16, 0
    1244:	18 cf       	rjmp	.-464    	; 0x1076 <vfscanf+0x2c>
    1246:	53 94       	inc	r5
    1248:	16 cf       	rjmp	.-468    	; 0x1076 <vfscanf+0x2c>
    124a:	55 20       	and	r5, r5
    124c:	19 f0       	breq	.+6      	; 0x1254 <vfscanf+0x20a>
    124e:	85 2d       	mov	r24, r5
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <vfscanf+0x20e>
    1254:	8f ef       	ldi	r24, 0xFF	; 255
    1256:	9f ef       	ldi	r25, 0xFF	; 255
    1258:	df 91       	pop	r29
    125a:	cf 91       	pop	r28
    125c:	1f 91       	pop	r17
    125e:	0f 91       	pop	r16
    1260:	ff 90       	pop	r15
    1262:	ef 90       	pop	r14
    1264:	df 90       	pop	r13
    1266:	cf 90       	pop	r12
    1268:	bf 90       	pop	r11
    126a:	af 90       	pop	r10
    126c:	9f 90       	pop	r9
    126e:	8f 90       	pop	r8
    1270:	7f 90       	pop	r7
    1272:	6f 90       	pop	r6
    1274:	5f 90       	pop	r5
    1276:	08 95       	ret

00001278 <calloc>:
    1278:	0f 93       	push	r16
    127a:	1f 93       	push	r17
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	86 9f       	mul	r24, r22
    1282:	80 01       	movw	r16, r0
    1284:	87 9f       	mul	r24, r23
    1286:	10 0d       	add	r17, r0
    1288:	96 9f       	mul	r25, r22
    128a:	10 0d       	add	r17, r0
    128c:	11 24       	eor	r1, r1
    128e:	c8 01       	movw	r24, r16
    1290:	0d d0       	rcall	.+26     	; 0x12ac <malloc>
    1292:	ec 01       	movw	r28, r24
    1294:	00 97       	sbiw	r24, 0x00	; 0
    1296:	21 f0       	breq	.+8      	; 0x12a0 <calloc+0x28>
    1298:	a8 01       	movw	r20, r16
    129a:	60 e0       	ldi	r22, 0x00	; 0
    129c:	70 e0       	ldi	r23, 0x00	; 0
    129e:	45 d1       	rcall	.+650    	; 0x152a <memset>
    12a0:	ce 01       	movw	r24, r28
    12a2:	df 91       	pop	r29
    12a4:	cf 91       	pop	r28
    12a6:	1f 91       	pop	r17
    12a8:	0f 91       	pop	r16
    12aa:	08 95       	ret

000012ac <malloc>:
    12ac:	0f 93       	push	r16
    12ae:	1f 93       	push	r17
    12b0:	cf 93       	push	r28
    12b2:	df 93       	push	r29
    12b4:	82 30       	cpi	r24, 0x02	; 2
    12b6:	91 05       	cpc	r25, r1
    12b8:	10 f4       	brcc	.+4      	; 0x12be <malloc+0x12>
    12ba:	82 e0       	ldi	r24, 0x02	; 2
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	e0 91 20 20 	lds	r30, 0x2020	; 0x802020 <__flp>
    12c2:	f0 91 21 20 	lds	r31, 0x2021	; 0x802021 <__flp+0x1>
    12c6:	20 e0       	ldi	r18, 0x00	; 0
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	a0 e0       	ldi	r26, 0x00	; 0
    12cc:	b0 e0       	ldi	r27, 0x00	; 0
    12ce:	30 97       	sbiw	r30, 0x00	; 0
    12d0:	19 f1       	breq	.+70     	; 0x1318 <malloc+0x6c>
    12d2:	40 81       	ld	r20, Z
    12d4:	51 81       	ldd	r21, Z+1	; 0x01
    12d6:	02 81       	ldd	r16, Z+2	; 0x02
    12d8:	13 81       	ldd	r17, Z+3	; 0x03
    12da:	48 17       	cp	r20, r24
    12dc:	59 07       	cpc	r21, r25
    12de:	c8 f0       	brcs	.+50     	; 0x1312 <malloc+0x66>
    12e0:	84 17       	cp	r24, r20
    12e2:	95 07       	cpc	r25, r21
    12e4:	69 f4       	brne	.+26     	; 0x1300 <malloc+0x54>
    12e6:	10 97       	sbiw	r26, 0x00	; 0
    12e8:	31 f0       	breq	.+12     	; 0x12f6 <malloc+0x4a>
    12ea:	12 96       	adiw	r26, 0x02	; 2
    12ec:	0c 93       	st	X, r16
    12ee:	12 97       	sbiw	r26, 0x02	; 2
    12f0:	13 96       	adiw	r26, 0x03	; 3
    12f2:	1c 93       	st	X, r17
    12f4:	27 c0       	rjmp	.+78     	; 0x1344 <malloc+0x98>
    12f6:	00 93 20 20 	sts	0x2020, r16	; 0x802020 <__flp>
    12fa:	10 93 21 20 	sts	0x2021, r17	; 0x802021 <__flp+0x1>
    12fe:	22 c0       	rjmp	.+68     	; 0x1344 <malloc+0x98>
    1300:	21 15       	cp	r18, r1
    1302:	31 05       	cpc	r19, r1
    1304:	19 f0       	breq	.+6      	; 0x130c <malloc+0x60>
    1306:	42 17       	cp	r20, r18
    1308:	53 07       	cpc	r21, r19
    130a:	18 f4       	brcc	.+6      	; 0x1312 <malloc+0x66>
    130c:	9a 01       	movw	r18, r20
    130e:	bd 01       	movw	r22, r26
    1310:	ef 01       	movw	r28, r30
    1312:	df 01       	movw	r26, r30
    1314:	f8 01       	movw	r30, r16
    1316:	db cf       	rjmp	.-74     	; 0x12ce <malloc+0x22>
    1318:	21 15       	cp	r18, r1
    131a:	31 05       	cpc	r19, r1
    131c:	f9 f0       	breq	.+62     	; 0x135c <malloc+0xb0>
    131e:	28 1b       	sub	r18, r24
    1320:	39 0b       	sbc	r19, r25
    1322:	24 30       	cpi	r18, 0x04	; 4
    1324:	31 05       	cpc	r19, r1
    1326:	80 f4       	brcc	.+32     	; 0x1348 <malloc+0x9c>
    1328:	8a 81       	ldd	r24, Y+2	; 0x02
    132a:	9b 81       	ldd	r25, Y+3	; 0x03
    132c:	61 15       	cp	r22, r1
    132e:	71 05       	cpc	r23, r1
    1330:	21 f0       	breq	.+8      	; 0x133a <malloc+0x8e>
    1332:	fb 01       	movw	r30, r22
    1334:	82 83       	std	Z+2, r24	; 0x02
    1336:	93 83       	std	Z+3, r25	; 0x03
    1338:	04 c0       	rjmp	.+8      	; 0x1342 <malloc+0x96>
    133a:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <__flp>
    133e:	90 93 21 20 	sts	0x2021, r25	; 0x802021 <__flp+0x1>
    1342:	fe 01       	movw	r30, r28
    1344:	32 96       	adiw	r30, 0x02	; 2
    1346:	44 c0       	rjmp	.+136    	; 0x13d0 <malloc+0x124>
    1348:	fe 01       	movw	r30, r28
    134a:	e2 0f       	add	r30, r18
    134c:	f3 1f       	adc	r31, r19
    134e:	81 93       	st	Z+, r24
    1350:	91 93       	st	Z+, r25
    1352:	22 50       	subi	r18, 0x02	; 2
    1354:	31 09       	sbc	r19, r1
    1356:	28 83       	st	Y, r18
    1358:	39 83       	std	Y+1, r19	; 0x01
    135a:	3a c0       	rjmp	.+116    	; 0x13d0 <malloc+0x124>
    135c:	20 91 1e 20 	lds	r18, 0x201E	; 0x80201e <__brkval>
    1360:	30 91 1f 20 	lds	r19, 0x201F	; 0x80201f <__brkval+0x1>
    1364:	23 2b       	or	r18, r19
    1366:	41 f4       	brne	.+16     	; 0x1378 <malloc+0xcc>
    1368:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    136c:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    1370:	20 93 1e 20 	sts	0x201E, r18	; 0x80201e <__brkval>
    1374:	30 93 1f 20 	sts	0x201F, r19	; 0x80201f <__brkval+0x1>
    1378:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    137c:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    1380:	21 15       	cp	r18, r1
    1382:	31 05       	cpc	r19, r1
    1384:	41 f4       	brne	.+16     	; 0x1396 <malloc+0xea>
    1386:	2d b7       	in	r18, 0x3d	; 61
    1388:	3e b7       	in	r19, 0x3e	; 62
    138a:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    138e:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    1392:	24 1b       	sub	r18, r20
    1394:	35 0b       	sbc	r19, r21
    1396:	e0 91 1e 20 	lds	r30, 0x201E	; 0x80201e <__brkval>
    139a:	f0 91 1f 20 	lds	r31, 0x201F	; 0x80201f <__brkval+0x1>
    139e:	e2 17       	cp	r30, r18
    13a0:	f3 07       	cpc	r31, r19
    13a2:	a0 f4       	brcc	.+40     	; 0x13cc <malloc+0x120>
    13a4:	2e 1b       	sub	r18, r30
    13a6:	3f 0b       	sbc	r19, r31
    13a8:	28 17       	cp	r18, r24
    13aa:	39 07       	cpc	r19, r25
    13ac:	78 f0       	brcs	.+30     	; 0x13cc <malloc+0x120>
    13ae:	ac 01       	movw	r20, r24
    13b0:	4e 5f       	subi	r20, 0xFE	; 254
    13b2:	5f 4f       	sbci	r21, 0xFF	; 255
    13b4:	24 17       	cp	r18, r20
    13b6:	35 07       	cpc	r19, r21
    13b8:	48 f0       	brcs	.+18     	; 0x13cc <malloc+0x120>
    13ba:	4e 0f       	add	r20, r30
    13bc:	5f 1f       	adc	r21, r31
    13be:	40 93 1e 20 	sts	0x201E, r20	; 0x80201e <__brkval>
    13c2:	50 93 1f 20 	sts	0x201F, r21	; 0x80201f <__brkval+0x1>
    13c6:	81 93       	st	Z+, r24
    13c8:	91 93       	st	Z+, r25
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <malloc+0x124>
    13cc:	e0 e0       	ldi	r30, 0x00	; 0
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	cf 01       	movw	r24, r30
    13d2:	df 91       	pop	r29
    13d4:	cf 91       	pop	r28
    13d6:	1f 91       	pop	r17
    13d8:	0f 91       	pop	r16
    13da:	08 95       	ret

000013dc <free>:
    13dc:	cf 93       	push	r28
    13de:	df 93       	push	r29
    13e0:	00 97       	sbiw	r24, 0x00	; 0
    13e2:	09 f4       	brne	.+2      	; 0x13e6 <free+0xa>
    13e4:	81 c0       	rjmp	.+258    	; 0x14e8 <free+0x10c>
    13e6:	fc 01       	movw	r30, r24
    13e8:	32 97       	sbiw	r30, 0x02	; 2
    13ea:	12 82       	std	Z+2, r1	; 0x02
    13ec:	13 82       	std	Z+3, r1	; 0x03
    13ee:	a0 91 20 20 	lds	r26, 0x2020	; 0x802020 <__flp>
    13f2:	b0 91 21 20 	lds	r27, 0x2021	; 0x802021 <__flp+0x1>
    13f6:	10 97       	sbiw	r26, 0x00	; 0
    13f8:	81 f4       	brne	.+32     	; 0x141a <free+0x3e>
    13fa:	20 81       	ld	r18, Z
    13fc:	31 81       	ldd	r19, Z+1	; 0x01
    13fe:	82 0f       	add	r24, r18
    1400:	93 1f       	adc	r25, r19
    1402:	20 91 1e 20 	lds	r18, 0x201E	; 0x80201e <__brkval>
    1406:	30 91 1f 20 	lds	r19, 0x201F	; 0x80201f <__brkval+0x1>
    140a:	28 17       	cp	r18, r24
    140c:	39 07       	cpc	r19, r25
    140e:	51 f5       	brne	.+84     	; 0x1464 <free+0x88>
    1410:	e0 93 1e 20 	sts	0x201E, r30	; 0x80201e <__brkval>
    1414:	f0 93 1f 20 	sts	0x201F, r31	; 0x80201f <__brkval+0x1>
    1418:	67 c0       	rjmp	.+206    	; 0x14e8 <free+0x10c>
    141a:	ed 01       	movw	r28, r26
    141c:	20 e0       	ldi	r18, 0x00	; 0
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	ce 17       	cp	r28, r30
    1422:	df 07       	cpc	r29, r31
    1424:	40 f4       	brcc	.+16     	; 0x1436 <free+0x5a>
    1426:	4a 81       	ldd	r20, Y+2	; 0x02
    1428:	5b 81       	ldd	r21, Y+3	; 0x03
    142a:	9e 01       	movw	r18, r28
    142c:	41 15       	cp	r20, r1
    142e:	51 05       	cpc	r21, r1
    1430:	f1 f0       	breq	.+60     	; 0x146e <free+0x92>
    1432:	ea 01       	movw	r28, r20
    1434:	f5 cf       	rjmp	.-22     	; 0x1420 <free+0x44>
    1436:	c2 83       	std	Z+2, r28	; 0x02
    1438:	d3 83       	std	Z+3, r29	; 0x03
    143a:	40 81       	ld	r20, Z
    143c:	51 81       	ldd	r21, Z+1	; 0x01
    143e:	84 0f       	add	r24, r20
    1440:	95 1f       	adc	r25, r21
    1442:	c8 17       	cp	r28, r24
    1444:	d9 07       	cpc	r29, r25
    1446:	59 f4       	brne	.+22     	; 0x145e <free+0x82>
    1448:	88 81       	ld	r24, Y
    144a:	99 81       	ldd	r25, Y+1	; 0x01
    144c:	84 0f       	add	r24, r20
    144e:	95 1f       	adc	r25, r21
    1450:	02 96       	adiw	r24, 0x02	; 2
    1452:	80 83       	st	Z, r24
    1454:	91 83       	std	Z+1, r25	; 0x01
    1456:	8a 81       	ldd	r24, Y+2	; 0x02
    1458:	9b 81       	ldd	r25, Y+3	; 0x03
    145a:	82 83       	std	Z+2, r24	; 0x02
    145c:	93 83       	std	Z+3, r25	; 0x03
    145e:	21 15       	cp	r18, r1
    1460:	31 05       	cpc	r19, r1
    1462:	29 f4       	brne	.+10     	; 0x146e <free+0x92>
    1464:	e0 93 20 20 	sts	0x2020, r30	; 0x802020 <__flp>
    1468:	f0 93 21 20 	sts	0x2021, r31	; 0x802021 <__flp+0x1>
    146c:	3d c0       	rjmp	.+122    	; 0x14e8 <free+0x10c>
    146e:	e9 01       	movw	r28, r18
    1470:	ea 83       	std	Y+2, r30	; 0x02
    1472:	fb 83       	std	Y+3, r31	; 0x03
    1474:	49 91       	ld	r20, Y+
    1476:	59 91       	ld	r21, Y+
    1478:	c4 0f       	add	r28, r20
    147a:	d5 1f       	adc	r29, r21
    147c:	ec 17       	cp	r30, r28
    147e:	fd 07       	cpc	r31, r29
    1480:	61 f4       	brne	.+24     	; 0x149a <free+0xbe>
    1482:	80 81       	ld	r24, Z
    1484:	91 81       	ldd	r25, Z+1	; 0x01
    1486:	84 0f       	add	r24, r20
    1488:	95 1f       	adc	r25, r21
    148a:	02 96       	adiw	r24, 0x02	; 2
    148c:	e9 01       	movw	r28, r18
    148e:	88 83       	st	Y, r24
    1490:	99 83       	std	Y+1, r25	; 0x01
    1492:	82 81       	ldd	r24, Z+2	; 0x02
    1494:	93 81       	ldd	r25, Z+3	; 0x03
    1496:	8a 83       	std	Y+2, r24	; 0x02
    1498:	9b 83       	std	Y+3, r25	; 0x03
    149a:	e0 e0       	ldi	r30, 0x00	; 0
    149c:	f0 e0       	ldi	r31, 0x00	; 0
    149e:	12 96       	adiw	r26, 0x02	; 2
    14a0:	8d 91       	ld	r24, X+
    14a2:	9c 91       	ld	r25, X
    14a4:	13 97       	sbiw	r26, 0x03	; 3
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	19 f0       	breq	.+6      	; 0x14b0 <free+0xd4>
    14aa:	fd 01       	movw	r30, r26
    14ac:	dc 01       	movw	r26, r24
    14ae:	f7 cf       	rjmp	.-18     	; 0x149e <free+0xc2>
    14b0:	8d 91       	ld	r24, X+
    14b2:	9c 91       	ld	r25, X
    14b4:	11 97       	sbiw	r26, 0x01	; 1
    14b6:	9d 01       	movw	r18, r26
    14b8:	2e 5f       	subi	r18, 0xFE	; 254
    14ba:	3f 4f       	sbci	r19, 0xFF	; 255
    14bc:	82 0f       	add	r24, r18
    14be:	93 1f       	adc	r25, r19
    14c0:	20 91 1e 20 	lds	r18, 0x201E	; 0x80201e <__brkval>
    14c4:	30 91 1f 20 	lds	r19, 0x201F	; 0x80201f <__brkval+0x1>
    14c8:	28 17       	cp	r18, r24
    14ca:	39 07       	cpc	r19, r25
    14cc:	69 f4       	brne	.+26     	; 0x14e8 <free+0x10c>
    14ce:	30 97       	sbiw	r30, 0x00	; 0
    14d0:	29 f4       	brne	.+10     	; 0x14dc <free+0x100>
    14d2:	10 92 20 20 	sts	0x2020, r1	; 0x802020 <__flp>
    14d6:	10 92 21 20 	sts	0x2021, r1	; 0x802021 <__flp+0x1>
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <free+0x104>
    14dc:	12 82       	std	Z+2, r1	; 0x02
    14de:	13 82       	std	Z+3, r1	; 0x03
    14e0:	a0 93 1e 20 	sts	0x201E, r26	; 0x80201e <__brkval>
    14e4:	b0 93 1f 20 	sts	0x201F, r27	; 0x80201f <__brkval+0x1>
    14e8:	df 91       	pop	r29
    14ea:	cf 91       	pop	r28
    14ec:	08 95       	ret

000014ee <isspace>:
    14ee:	91 11       	cpse	r25, r1
    14f0:	1f c1       	rjmp	.+574    	; 0x1730 <__ctype_isfalse>
    14f2:	80 32       	cpi	r24, 0x20	; 32
    14f4:	19 f0       	breq	.+6      	; 0x14fc <isspace+0xe>
    14f6:	89 50       	subi	r24, 0x09	; 9
    14f8:	85 50       	subi	r24, 0x05	; 5
    14fa:	d0 f7       	brcc	.-12     	; 0x14f0 <isspace+0x2>
    14fc:	08 95       	ret

000014fe <strchr_P>:
    14fe:	fc 01       	movw	r30, r24
    1500:	05 90       	lpm	r0, Z+
    1502:	06 16       	cp	r0, r22
    1504:	21 f0       	breq	.+8      	; 0x150e <strchr_P+0x10>
    1506:	00 20       	and	r0, r0
    1508:	d9 f7       	brne	.-10     	; 0x1500 <strchr_P+0x2>
    150a:	c0 01       	movw	r24, r0
    150c:	08 95       	ret
    150e:	31 97       	sbiw	r30, 0x01	; 1
    1510:	cf 01       	movw	r24, r30
    1512:	08 95       	ret

00001514 <strnlen_P>:
    1514:	fc 01       	movw	r30, r24
    1516:	05 90       	lpm	r0, Z+
    1518:	61 50       	subi	r22, 0x01	; 1
    151a:	70 40       	sbci	r23, 0x00	; 0
    151c:	01 10       	cpse	r0, r1
    151e:	d8 f7       	brcc	.-10     	; 0x1516 <strnlen_P+0x2>
    1520:	80 95       	com	r24
    1522:	90 95       	com	r25
    1524:	8e 0f       	add	r24, r30
    1526:	9f 1f       	adc	r25, r31
    1528:	08 95       	ret

0000152a <memset>:
    152a:	dc 01       	movw	r26, r24
    152c:	01 c0       	rjmp	.+2      	; 0x1530 <memset+0x6>
    152e:	6d 93       	st	X+, r22
    1530:	41 50       	subi	r20, 0x01	; 1
    1532:	50 40       	sbci	r21, 0x00	; 0
    1534:	e0 f7       	brcc	.-8      	; 0x152e <memset+0x4>
    1536:	08 95       	ret

00001538 <strnlen>:
    1538:	fc 01       	movw	r30, r24
    153a:	61 50       	subi	r22, 0x01	; 1
    153c:	70 40       	sbci	r23, 0x00	; 0
    153e:	01 90       	ld	r0, Z+
    1540:	01 10       	cpse	r0, r1
    1542:	d8 f7       	brcc	.-10     	; 0x153a <strnlen+0x2>
    1544:	80 95       	com	r24
    1546:	90 95       	com	r25
    1548:	8e 0f       	add	r24, r30
    154a:	9f 1f       	adc	r25, r31
    154c:	08 95       	ret

0000154e <fgetc>:
    154e:	cf 93       	push	r28
    1550:	df 93       	push	r29
    1552:	ec 01       	movw	r28, r24
    1554:	2b 81       	ldd	r18, Y+3	; 0x03
    1556:	20 ff       	sbrs	r18, 0
    1558:	33 c0       	rjmp	.+102    	; 0x15c0 <fgetc+0x72>
    155a:	26 ff       	sbrs	r18, 6
    155c:	0a c0       	rjmp	.+20     	; 0x1572 <fgetc+0x24>
    155e:	2f 7b       	andi	r18, 0xBF	; 191
    1560:	2b 83       	std	Y+3, r18	; 0x03
    1562:	8e 81       	ldd	r24, Y+6	; 0x06
    1564:	9f 81       	ldd	r25, Y+7	; 0x07
    1566:	01 96       	adiw	r24, 0x01	; 1
    1568:	8e 83       	std	Y+6, r24	; 0x06
    156a:	9f 83       	std	Y+7, r25	; 0x07
    156c:	8a 81       	ldd	r24, Y+2	; 0x02
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	29 c0       	rjmp	.+82     	; 0x15c4 <fgetc+0x76>
    1572:	22 ff       	sbrs	r18, 2
    1574:	0f c0       	rjmp	.+30     	; 0x1594 <fgetc+0x46>
    1576:	e8 81       	ld	r30, Y
    1578:	f9 81       	ldd	r31, Y+1	; 0x01
    157a:	80 81       	ld	r24, Z
    157c:	08 2e       	mov	r0, r24
    157e:	00 0c       	add	r0, r0
    1580:	99 0b       	sbc	r25, r25
    1582:	00 97       	sbiw	r24, 0x00	; 0
    1584:	19 f4       	brne	.+6      	; 0x158c <fgetc+0x3e>
    1586:	20 62       	ori	r18, 0x20	; 32
    1588:	2b 83       	std	Y+3, r18	; 0x03
    158a:	1a c0       	rjmp	.+52     	; 0x15c0 <fgetc+0x72>
    158c:	31 96       	adiw	r30, 0x01	; 1
    158e:	e8 83       	st	Y, r30
    1590:	f9 83       	std	Y+1, r31	; 0x01
    1592:	0e c0       	rjmp	.+28     	; 0x15b0 <fgetc+0x62>
    1594:	ea 85       	ldd	r30, Y+10	; 0x0a
    1596:	fb 85       	ldd	r31, Y+11	; 0x0b
    1598:	19 95       	eicall
    159a:	97 ff       	sbrs	r25, 7
    159c:	09 c0       	rjmp	.+18     	; 0x15b0 <fgetc+0x62>
    159e:	2b 81       	ldd	r18, Y+3	; 0x03
    15a0:	01 96       	adiw	r24, 0x01	; 1
    15a2:	11 f0       	breq	.+4      	; 0x15a8 <fgetc+0x5a>
    15a4:	80 e2       	ldi	r24, 0x20	; 32
    15a6:	01 c0       	rjmp	.+2      	; 0x15aa <fgetc+0x5c>
    15a8:	80 e1       	ldi	r24, 0x10	; 16
    15aa:	82 2b       	or	r24, r18
    15ac:	8b 83       	std	Y+3, r24	; 0x03
    15ae:	08 c0       	rjmp	.+16     	; 0x15c0 <fgetc+0x72>
    15b0:	2e 81       	ldd	r18, Y+6	; 0x06
    15b2:	3f 81       	ldd	r19, Y+7	; 0x07
    15b4:	2f 5f       	subi	r18, 0xFF	; 255
    15b6:	3f 4f       	sbci	r19, 0xFF	; 255
    15b8:	2e 83       	std	Y+6, r18	; 0x06
    15ba:	3f 83       	std	Y+7, r19	; 0x07
    15bc:	99 27       	eor	r25, r25
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <fgetc+0x76>
    15c0:	8f ef       	ldi	r24, 0xFF	; 255
    15c2:	9f ef       	ldi	r25, 0xFF	; 255
    15c4:	df 91       	pop	r29
    15c6:	cf 91       	pop	r28
    15c8:	08 95       	ret

000015ca <fputc>:
    15ca:	0f 93       	push	r16
    15cc:	1f 93       	push	r17
    15ce:	cf 93       	push	r28
    15d0:	df 93       	push	r29
    15d2:	fb 01       	movw	r30, r22
    15d4:	23 81       	ldd	r18, Z+3	; 0x03
    15d6:	21 fd       	sbrc	r18, 1
    15d8:	03 c0       	rjmp	.+6      	; 0x15e0 <fputc+0x16>
    15da:	8f ef       	ldi	r24, 0xFF	; 255
    15dc:	9f ef       	ldi	r25, 0xFF	; 255
    15de:	2c c0       	rjmp	.+88     	; 0x1638 <fputc+0x6e>
    15e0:	22 ff       	sbrs	r18, 2
    15e2:	16 c0       	rjmp	.+44     	; 0x1610 <fputc+0x46>
    15e4:	46 81       	ldd	r20, Z+6	; 0x06
    15e6:	57 81       	ldd	r21, Z+7	; 0x07
    15e8:	24 81       	ldd	r18, Z+4	; 0x04
    15ea:	35 81       	ldd	r19, Z+5	; 0x05
    15ec:	42 17       	cp	r20, r18
    15ee:	53 07       	cpc	r21, r19
    15f0:	44 f4       	brge	.+16     	; 0x1602 <fputc+0x38>
    15f2:	a0 81       	ld	r26, Z
    15f4:	b1 81       	ldd	r27, Z+1	; 0x01
    15f6:	9d 01       	movw	r18, r26
    15f8:	2f 5f       	subi	r18, 0xFF	; 255
    15fa:	3f 4f       	sbci	r19, 0xFF	; 255
    15fc:	20 83       	st	Z, r18
    15fe:	31 83       	std	Z+1, r19	; 0x01
    1600:	8c 93       	st	X, r24
    1602:	26 81       	ldd	r18, Z+6	; 0x06
    1604:	37 81       	ldd	r19, Z+7	; 0x07
    1606:	2f 5f       	subi	r18, 0xFF	; 255
    1608:	3f 4f       	sbci	r19, 0xFF	; 255
    160a:	26 83       	std	Z+6, r18	; 0x06
    160c:	37 83       	std	Z+7, r19	; 0x07
    160e:	14 c0       	rjmp	.+40     	; 0x1638 <fputc+0x6e>
    1610:	8b 01       	movw	r16, r22
    1612:	ec 01       	movw	r28, r24
    1614:	fb 01       	movw	r30, r22
    1616:	00 84       	ldd	r0, Z+8	; 0x08
    1618:	f1 85       	ldd	r31, Z+9	; 0x09
    161a:	e0 2d       	mov	r30, r0
    161c:	19 95       	eicall
    161e:	89 2b       	or	r24, r25
    1620:	e1 f6       	brne	.-72     	; 0x15da <fputc+0x10>
    1622:	d8 01       	movw	r26, r16
    1624:	16 96       	adiw	r26, 0x06	; 6
    1626:	8d 91       	ld	r24, X+
    1628:	9c 91       	ld	r25, X
    162a:	17 97       	sbiw	r26, 0x07	; 7
    162c:	01 96       	adiw	r24, 0x01	; 1
    162e:	16 96       	adiw	r26, 0x06	; 6
    1630:	8d 93       	st	X+, r24
    1632:	9c 93       	st	X, r25
    1634:	17 97       	sbiw	r26, 0x07	; 7
    1636:	ce 01       	movw	r24, r28
    1638:	df 91       	pop	r29
    163a:	cf 91       	pop	r28
    163c:	1f 91       	pop	r17
    163e:	0f 91       	pop	r16
    1640:	08 95       	ret

00001642 <ungetc>:
    1642:	fb 01       	movw	r30, r22
    1644:	23 81       	ldd	r18, Z+3	; 0x03
    1646:	20 ff       	sbrs	r18, 0
    1648:	12 c0       	rjmp	.+36     	; 0x166e <ungetc+0x2c>
    164a:	26 fd       	sbrc	r18, 6
    164c:	10 c0       	rjmp	.+32     	; 0x166e <ungetc+0x2c>
    164e:	8f 3f       	cpi	r24, 0xFF	; 255
    1650:	3f ef       	ldi	r19, 0xFF	; 255
    1652:	93 07       	cpc	r25, r19
    1654:	61 f0       	breq	.+24     	; 0x166e <ungetc+0x2c>
    1656:	82 83       	std	Z+2, r24	; 0x02
    1658:	2f 7d       	andi	r18, 0xDF	; 223
    165a:	20 64       	ori	r18, 0x40	; 64
    165c:	23 83       	std	Z+3, r18	; 0x03
    165e:	26 81       	ldd	r18, Z+6	; 0x06
    1660:	37 81       	ldd	r19, Z+7	; 0x07
    1662:	21 50       	subi	r18, 0x01	; 1
    1664:	31 09       	sbc	r19, r1
    1666:	26 83       	std	Z+6, r18	; 0x06
    1668:	37 83       	std	Z+7, r19	; 0x07
    166a:	99 27       	eor	r25, r25
    166c:	08 95       	ret
    166e:	8f ef       	ldi	r24, 0xFF	; 255
    1670:	9f ef       	ldi	r25, 0xFF	; 255
    1672:	08 95       	ret

00001674 <__ultoa_invert>:
    1674:	fa 01       	movw	r30, r20
    1676:	aa 27       	eor	r26, r26
    1678:	28 30       	cpi	r18, 0x08	; 8
    167a:	51 f1       	breq	.+84     	; 0x16d0 <__ultoa_invert+0x5c>
    167c:	20 31       	cpi	r18, 0x10	; 16
    167e:	81 f1       	breq	.+96     	; 0x16e0 <__ultoa_invert+0x6c>
    1680:	e8 94       	clt
    1682:	6f 93       	push	r22
    1684:	6e 7f       	andi	r22, 0xFE	; 254
    1686:	6e 5f       	subi	r22, 0xFE	; 254
    1688:	7f 4f       	sbci	r23, 0xFF	; 255
    168a:	8f 4f       	sbci	r24, 0xFF	; 255
    168c:	9f 4f       	sbci	r25, 0xFF	; 255
    168e:	af 4f       	sbci	r26, 0xFF	; 255
    1690:	b1 e0       	ldi	r27, 0x01	; 1
    1692:	3e d0       	rcall	.+124    	; 0x1710 <__ultoa_invert+0x9c>
    1694:	b4 e0       	ldi	r27, 0x04	; 4
    1696:	3c d0       	rcall	.+120    	; 0x1710 <__ultoa_invert+0x9c>
    1698:	67 0f       	add	r22, r23
    169a:	78 1f       	adc	r23, r24
    169c:	89 1f       	adc	r24, r25
    169e:	9a 1f       	adc	r25, r26
    16a0:	a1 1d       	adc	r26, r1
    16a2:	68 0f       	add	r22, r24
    16a4:	79 1f       	adc	r23, r25
    16a6:	8a 1f       	adc	r24, r26
    16a8:	91 1d       	adc	r25, r1
    16aa:	a1 1d       	adc	r26, r1
    16ac:	6a 0f       	add	r22, r26
    16ae:	71 1d       	adc	r23, r1
    16b0:	81 1d       	adc	r24, r1
    16b2:	91 1d       	adc	r25, r1
    16b4:	a1 1d       	adc	r26, r1
    16b6:	20 d0       	rcall	.+64     	; 0x16f8 <__ultoa_invert+0x84>
    16b8:	09 f4       	brne	.+2      	; 0x16bc <__ultoa_invert+0x48>
    16ba:	68 94       	set
    16bc:	3f 91       	pop	r19
    16be:	2a e0       	ldi	r18, 0x0A	; 10
    16c0:	26 9f       	mul	r18, r22
    16c2:	11 24       	eor	r1, r1
    16c4:	30 19       	sub	r19, r0
    16c6:	30 5d       	subi	r19, 0xD0	; 208
    16c8:	31 93       	st	Z+, r19
    16ca:	de f6       	brtc	.-74     	; 0x1682 <__ultoa_invert+0xe>
    16cc:	cf 01       	movw	r24, r30
    16ce:	08 95       	ret
    16d0:	46 2f       	mov	r20, r22
    16d2:	47 70       	andi	r20, 0x07	; 7
    16d4:	40 5d       	subi	r20, 0xD0	; 208
    16d6:	41 93       	st	Z+, r20
    16d8:	b3 e0       	ldi	r27, 0x03	; 3
    16da:	0f d0       	rcall	.+30     	; 0x16fa <__ultoa_invert+0x86>
    16dc:	c9 f7       	brne	.-14     	; 0x16d0 <__ultoa_invert+0x5c>
    16de:	f6 cf       	rjmp	.-20     	; 0x16cc <__ultoa_invert+0x58>
    16e0:	46 2f       	mov	r20, r22
    16e2:	4f 70       	andi	r20, 0x0F	; 15
    16e4:	40 5d       	subi	r20, 0xD0	; 208
    16e6:	4a 33       	cpi	r20, 0x3A	; 58
    16e8:	18 f0       	brcs	.+6      	; 0x16f0 <__ultoa_invert+0x7c>
    16ea:	49 5d       	subi	r20, 0xD9	; 217
    16ec:	31 fd       	sbrc	r19, 1
    16ee:	40 52       	subi	r20, 0x20	; 32
    16f0:	41 93       	st	Z+, r20
    16f2:	02 d0       	rcall	.+4      	; 0x16f8 <__ultoa_invert+0x84>
    16f4:	a9 f7       	brne	.-22     	; 0x16e0 <__ultoa_invert+0x6c>
    16f6:	ea cf       	rjmp	.-44     	; 0x16cc <__ultoa_invert+0x58>
    16f8:	b4 e0       	ldi	r27, 0x04	; 4
    16fa:	a6 95       	lsr	r26
    16fc:	97 95       	ror	r25
    16fe:	87 95       	ror	r24
    1700:	77 95       	ror	r23
    1702:	67 95       	ror	r22
    1704:	ba 95       	dec	r27
    1706:	c9 f7       	brne	.-14     	; 0x16fa <__ultoa_invert+0x86>
    1708:	00 97       	sbiw	r24, 0x00	; 0
    170a:	61 05       	cpc	r22, r1
    170c:	71 05       	cpc	r23, r1
    170e:	08 95       	ret
    1710:	9b 01       	movw	r18, r22
    1712:	ac 01       	movw	r20, r24
    1714:	0a 2e       	mov	r0, r26
    1716:	06 94       	lsr	r0
    1718:	57 95       	ror	r21
    171a:	47 95       	ror	r20
    171c:	37 95       	ror	r19
    171e:	27 95       	ror	r18
    1720:	ba 95       	dec	r27
    1722:	c9 f7       	brne	.-14     	; 0x1716 <__ultoa_invert+0xa2>
    1724:	62 0f       	add	r22, r18
    1726:	73 1f       	adc	r23, r19
    1728:	84 1f       	adc	r24, r20
    172a:	95 1f       	adc	r25, r21
    172c:	a0 1d       	adc	r26, r0
    172e:	08 95       	ret

00001730 <__ctype_isfalse>:
    1730:	99 27       	eor	r25, r25
    1732:	88 27       	eor	r24, r24

00001734 <__ctype_istrue>:
    1734:	08 95       	ret

00001736 <_exit>:
    1736:	f8 94       	cli

00001738 <__stop_program>:
    1738:	ff cf       	rjmp	.-2      	; 0x1738 <__stop_program>
